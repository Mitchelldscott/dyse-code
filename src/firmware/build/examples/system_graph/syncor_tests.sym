
/Users/mitchellscott/Desktop/rufous/src/firmware/build/examples/system_graph/syncor_tests.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
600020a4 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
0000a900 l    d  .fini	00000000 .fini
0000a904 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
200022c0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
6000ee48 l    d  .text.csf	00000000 .text.csf
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000016 memory_copy
60001418 l     F .text.code	00000010 memory_clear
00000000 l    df *ABS*	00000000 analog.c
2000277e l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 tempmon.c
20002730 l     O .bss	00000004 s_hotTemp
20002734 l     O .bss	00000004 s_hot_ROOM
20002738 l     O .bss	00000004 s_roomC_hotC
2000272c l     O .bss	00000004 s_hotCount
00000000 l    df *ABS*	00000000 usb.c
00001fe4 l     F .text.itcm	00000090 schedule_transfer
00002074 l     F .text.itcm	00000036 run_callbacks
000020ac l     F .text.itcm	000000a0 endpoint0_transmit.constprop.1
200026f8 l     O .bss	00000004 endpointN_notify_mask
20002784 l     O .bss	00000001 sof_usage
200026f4 l     O .bss	00000004 endpoint0_notify_mask
2000278b l     O .bss	00000001 usb_reboot_timer
20002660 l     O .bss	00000008 endpoint0_setupdata
200026fc l     O .bss	00000008 reply_buffer
200026ec l     O .bss	00000008 endpoint0_buffer
00000000 l    df *ABS*	00000000 WireIMXRT.cpp
00000000 l    df *ABS*	00000000 /Users/mitchellscott/Library/Arduino15/packages/teensy/tools/teensy-compile/5.4.1/arm/bin/../lib/gcc/arm-none-eabi/5.4.1/armv7e-m/fpu/fpv5-d16/crti.o
00000000 l    df *ABS*	00000000 /Users/mitchellscott/Library/Arduino15/packages/teensy/tools/teensy-compile/5.4.1/arm/bin/../lib/gcc/arm-none-eabi/5.4.1/armv7e-m/fpu/fpv5-d16/crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 __do_global_dtors_aux
20002668 l       .bss	00000000 completed.8605
00000044 l     F .text.itcm	00000000 frame_dummy
2000266c l       .bss	00000000 object.8610
60002098 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 syncor_tests.cpp
0000024c l     F .text.itcm	0000000c _GLOBAL__sub_I_watch
00000000 l    df *ABS*	00000000 Tone.cpp
00003048 l     F .text.itcm	00000018 _GLOBAL__sub_I__Z4tonehtm
2000183c l     O .data	00000008 tone_timer
00000000 l    df *ABS*	00000000 usb_desc.c
60002180 l     O .text.progmem	0000000a qualifier_descriptor
20001dfc l     O .data	00000021 seremu_report_desc
20001de0 l     O .data	0000001c rawhid_report_desc
20001dcc l     O .data	00000012 device_descriptor
00000000 l    df *ABS*	00000000 serialEvent.cpp
00000000 l    df *ABS*	00000000 linear_algebra.cpp
00000000 l    df *ABS*	00000000 hid_report.cpp
00000000 l    df *ABS*	00000000 lsm6dsox.cpp
00000000 l    df *ABS*	00000000 process.cpp
00000000 l    df *ABS*	00000000 syncor.cpp
00000000 l    df *ABS*	00000000 syncor_node.cpp
00000000 l    df *ABS*	00000000 blink.cpp
00000000 l    df *ABS*	00000000 timing.cpp
00000000 l    df *ABS*	00000000 vector.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
000018a4 l     F .text.itcm	0000004c digitalWrite.part.0
000018f0 l     F .text.itcm	0000001c digitalRead.part.1
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 usb_rawhid.c
00002908 l     F .text.itcm	00000034 rx_event
0000293c l     F .text.itcm	00000060 rx_queue_transfer
20002786 l     O .bss	00000001 tx_head
200022e0 l     O .bss	00000080 rx_transfer
20002782 l     O .bss	00000001 rx_tail
20002718 l     O .bss	00000005 rx_list
20200060 l     O .bss.dma	00000100 rx_buffer
20200160 l     O .bss.dma	00000100 txbuffer
20002780 l     O .bss	00000001 rx_head
20002460 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 usb_seremu.c
00002a10 l     F .text.itcm	00000064 rx_queue_transfer
00002a74 l     F .text.itcm	00000058 rx_event
00002ce8 l     F .text.itcm	0000002c usb_seremu_flush_callback
00002d14 l     F .text.itcm	00000140 usb_seremu_write.part.1
20002783 l     O .bss	00000001 rx_tail
20002788 l     O .bss	00000001 tx_noautoflush
20002787 l     O .bss	00000001 tx_head
20002360 l     O .bss	00000100 rx_transfer
20002708 l     O .bss	00000010 rx_index
20002720 l     O .bss	00000009 rx_list
20200260 l     O .bss.dma	00000100 rx_buffer
20200360 l     O .bss.dma	00000300 txbuffer
20002778 l     O .bss	00000002 tx_available
20002704 l     O .bss	00000004 rx_available
20002781 l     O .bss	00000001 rx_head
20002785 l     O .bss	00000001 transmit_previous_timeout
200024e0 l     O .bss	00000180 tx_transfer
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 IntervalTimer.cpp
200022c0 l     O .bss	00000010 funct_table
00000000 l    df *ABS*	00000000 Print.cpp
00000000 l    df *ABS*	00000000 WString.cpp
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 yield.cpp
2000277c l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 Adafruit_BusIO_Register.cpp
00000000 l    df *ABS*	00000000 Adafruit_I2CDevice.cpp
00000000 l    df *ABS*	00000000 Adafruit_SPIDevice.cpp
00000000 l    df *ABS*	00000000 Adafruit_ICM20X.cpp
00000000 l    df *ABS*	00000000 Adafruit_LIS3MDL.cpp
20000430 l     O .data	00000010 CSWTCH.19
00000000 l    df *ABS*	00000000 Adafruit_LSM6DS.cpp
200003fc l     O .data	00000034 CSWTCH.18
20000440 l     O .data	00000010 CSWTCH.19
00000000 l    df *ABS*	00000000 Adafruit_LSM6DSOX.cpp
00000000 l    df *ABS*	00000000 SPI.cpp
000049ac l     F .text.itcm	00000058 SPIClass::transfer(void const*, void*, unsigned int) [clone .part.11]
00000000 l    df *ABS*	00000000 s_cos.c
00000000 l    df *ABS*	00000000 s_sin.c
00000000 l    df *ABS*	00000000 w_atan2.c
00000000 l    df *ABS*	00000000 w_sqrt.c
00000000 l    df *ABS*	00000000 e_atan2.c
00000000 l    df *ABS*	00000000 e_rem_pio2.c
20000a64 l     O .data	00000080 npio2_hw
20000e84 l     O .data	00000108 two_over_pi
00000000 l    df *ABS*	00000000 e_sqrt.c
00000000 l    df *ABS*	00000000 k_cos.c
00000000 l    df *ABS*	00000000 k_rem_pio2.c
20000a54 l     O .data	00000010 init_jk
20000280 l     O .data	00000040 PIo2
00000000 l    df *ABS*	00000000 k_sin.c
00000000 l    df *ABS*	00000000 s_atan.c
200003d0 l     O .data	00000020 atanlo
200003b0 l     O .data	00000020 atanhi
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_floor.c
00000000 l    df *ABS*	00000000 s_matherr.c
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 atexit_arm.cc
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 cxa_atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 lib_a-memcpy.o
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 realloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 lib_a-strcmp.o
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 vdprintf.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lib_a-memchr.o
00000000 l    df *ABS*	00000000 mprec.c
20000ae4 l     O .data	0000000c p05.6087
00000000 l    df *ABS*	00000000 vasnprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 dtoa.c
000084c4 l     F .text.itcm	00000128 quorem
00000000 l    df *ABS*	00000000 vfprintf.c
20001028 l     O .data	00000010 zeroes.7258
200006d4 l     O .data	00000010 blanks.7257
00000000 l    df *ABS*	00000000 vfprintf.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 impure.c
20001038 l     O .data	00000428 impure_data
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 s_lib_ver.c
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 
00000000 l       *UND*	00000000 __fini_array_end
00000000 l       *UND*	00000000 __bss_start__
6000fc00 l       .text.csf	00000000 __text_csf_end
00000000 l       *UND*	00000000 __bss_end__
00000000 l       *UND*	00000000 software_init_hook
00000000 l       *UND*	00000000 __fini_array_start
00000000 l       *UND*	00000000 hardware_init_hook
00000000 l       *UND*	00000000 __libc_fini
00000000 l       *UND*	00000000 __stack
60002058 l     F .text.code	00000008 __main_veneer
60002060 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60002068 l     F .text.code	00000008 ____libc_init_array_veneer
60002070 l     F .text.code	00000008 __set_arm_clock_veneer
60002078 l     F .text.code	00000008 __delay_veneer
60002080 l     F .text.code	00000008 __memset_veneer
60002088 l     F .text.code	00000008 __sm_set_pool_veneer
60002090 l     F .text.code	00000008 __pwm_init_veneer
0000a8e8 l     F .text.itcm	00000008 ___init_veneer
0000a8f0 l     F .text.itcm	00000008 ___ZN7TwoWire5beginEv_veneer
0000a8f8 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
00000680 g     F .text.itcm	00000024 Process::setup(Vector<float>*)
000005fc g     F .text.itcm	0000000e Process::input_dim()
000009fc g     F .text.itcm	00000060 SynCor::SynCor()
0000767c g     F .text.itcm	000000ba strcpy
00004028  w    F .text.itcm	00000002 Adafruit_LSM6DS_Gyro::~Adafruit_LSM6DS_Gyro()
000039f4 g     F .text.itcm	0000001e Adafruit_SPIDevice::endTransactionWithDeassertingCS()
0000303c  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
00002c2c g     F .text.itcm	00000024 usb_seremu_available
000032ac g     F .text.itcm	0000002a Adafruit_BusIO_Register::Adafruit_BusIO_Register(Adafruit_I2CDevice*, Adafruit_SPIDevice*, _Adafruit_BusIO_SPIRegType, unsigned short, unsigned char, unsigned char, unsigned char)
00004058  w    F .text.itcm	0000000e Adafruit_LSM6DS_Temp::~Adafruit_LSM6DS_Temp()
0000318c g     F .text.itcm	00000004 operator new[](unsigned int)
2000277d g     O .bss	00000001 blinker_status
600016b4 g     F .text.code	00000002 startup_default_late_hook
00006114 g     F .text.itcm	0000000e fabs
000031bc  w    F .text.itcm	000000f0 yield
000011ac  w    F .text.itcm	0000000c Vector<int>::clear()
00005018 g     F .text.itcm	000000a8 sqrt
2000274c g     O .bss	00000004 usb_timer1_callback
600020cc g     O .text.progmem	00000018 usb_string_manufacturer_name_default
6000179c g     F .text.code	000003bc configure_external_ram
200015bc g     O .data	00000140 Wire1
00001404  w    F .text.itcm	0000002a Vector<float>::slice(float*, int, int)
00003198  w    F .text.itcm	00000004 usb_seremu_class::peek()
60001f54 g     F .text.code	00000038 TwoWire::configSDApin(unsigned char)
00004654 g     F .text.itcm	0000007c Adafruit_LSM6DS::configInt1(bool, bool, bool, bool, bool)
00002fec g     F .text.itcm	00000020 Print::println()
00004df4 g     F .text.itcm	000000b4 TwoWire::isr()
000040c0 g     F .text.itcm	00000040 Adafruit_LSM6DS_Gyro::getEvent(sensors_event_t*)
000008f4  w    F .text.itcm	0000002c ComplimentaryFilter::setup(Vector<float>*)
00004430 g     F .text.itcm	00000048 Adafruit_LSM6DS::reset()
00006f84 g     F .text.itcm	00000002 __malloc_unlock
20000508 g     O .data	0000001c vtable for Adafruit_LSM6DS_Temp
00000d3c g     F .text.itcm	00000068 SynCor::dump_all()
60001654 g     F .text.code	00000058 analog_init
00007884 g     F .text.itcm	0000004a _vdprintf_r
00004030  w    F .text.itcm	00000002 Adafruit_LSM6DS_Temp::~Adafruit_LSM6DS_Temp()
000035f8 g     F .text.itcm	00000074 Adafruit_I2CDevice::_read(unsigned char*, unsigned int, bool)
20001468 g     O .data	00000004 F_CPU_ACTUAL
00006e1c g     F .text.itcm	000000c6 memmove
00000f10 g     F .text.itcm	00000020 FTYK::FTYK()
00003a14 g     F .text.itcm	0000006a Adafruit_SPIDevice::write(unsigned char const*, unsigned int, unsigned char const*, unsigned int)
00007de0 g     F .text.itcm	0000004c _Balloc
0000a90c g       .ARM.exidx	00000000 __exidx_end
000013b8  w    F .text.itcm	0000004c Vector<float>::insert(float*, int, int)
20002750 g     O .bss	00000028 watch
2000277a g     O .bss	00000001 EventResponder::runningFromYield
000012d0  w    F .text.itcm	0000002c Vector<float>::reset(int)
00001f84 g     F .text.itcm	00000060 tempmonGetTemp
000066b0 g     F .text.itcm	0000000c __errno
0000062c g     F .text.itcm	0000001c Process::reset()
60001000 g     O .text.headers	00000020 ImageVectorTable
0000319c  w    F .text.itcm	00000004 usb_seremu_class::read()
00003cd8 g     F .text.itcm	00000070 Adafruit_LIS3MDL::setDataRate(lis3mdl_dataRate_t)
2000268c g     O .bss	00000004 EventResponder::firstInterrupt
00001464  w    F .text.itcm	0000000c Vector<SynCorNode*>::clear()
000028ac g     F .text.itcm	00000004 usb_transfer_status
000002e4 g     F .text.itcm	0000001a LSM6DSOX::reset()
200004a8 g     O .data	00000018 vtable for Adafruit_LSM6DSOX
00001d2c g     F .text.itcm	00000090 sm_set_pool
000012ac  w    F .text.itcm	00000022 Vector<float>::Vector(int)
00003108 g     F .text.itcm	0000001e String::String(String const&)
00002e9c g     F .text.itcm	0000003c usb_seremu_flush_output
00000c20 g     F .text.itcm	00000090 SynCor::update_config(int, int, int, float*)
00002e54 g     F .text.itcm	0000002c usb_seremu_putchar
200006e4 g     O .data	00000370 digital_pin_to_info_PGM
000010b8 g     F .text.itcm	00000064 Vector<int>::print()
00003af8 g     F .text.itcm	0000004c Adafruit_LIS3MDL::getSensor(sensor_t*)
200027f4 g     O .bss	00000004 errno
000011b8  w    F .text.itcm	0000002c Vector<int>::reset(int)
00006128 g     F .text.itcm	00000118 floor
600021dc g     O .text.progmem	00000050 TwoWire::i2c3_hardware
0000a908 g       .text.itcm	00000000 _etext
00003c6c g     F .text.itcm	0000006c Adafruit_LIS3MDL::setPerformanceMode(lis3mdl_performancemode_t)
200022c0 g       .bss	00000000 _sbss
00003dbc g     F .text.itcm	00000038 Adafruit_LIS3MDL::getRange()
00003c10 g     F .text.itcm	0000005c Adafruit_LIS3MDL::getEvent(sensors_event_t*)
00001430  w    F .text.itcm	0000001a Vector<float>::operator[](int)
00003a80 g     F .text.itcm	00000070 Adafruit_SPIDevice::write_then_read(unsigned char const*, unsigned int, unsigned char*, unsigned int, unsigned char)
00002e98 g     F .text.itcm	00000004 usb_seremu_write_buffer_free
00001918 g     F .text.itcm	0000000c digitalRead
6000227c g       *ABS*	00000000 _stextload
00000dcc g     F .text.itcm	00000004 SynCorNode::output()
00002764 g     F .text.itcm	00000064 usb_config_rx
000031ac  w    F .text.itcm	00000008 usb_seremu_class::write(unsigned char const*, unsigned int)
00000f10 g     F .text.itcm	00000020 FTYK::FTYK()
0000135c  w    F .text.itcm	00000004 Vector<float>::size()
00004bf4 g     F .text.itcm	000000e0 TwoWire::endTransmission(unsigned char)
000052a0 g     F .text.itcm	0000029c __ieee754_rem_pio2
20002688 g     O .bss	00000004 EventResponder::lastInterrupt
00006ce8 g     F .text.itcm	00000134 memcpy
000034b4 g     F .text.itcm	0000001a Adafruit_BusIO_RegisterBits::read()
00009278 g     F .text.itcm	00001570 _svfprintf_r
20002744 g     O .bss	00000004 systick_millis_count
00003b44  w    F .text.itcm	0000000e Adafruit_LIS3MDL::~Adafruit_LIS3MDL()
000032ac g     F .text.itcm	0000002a Adafruit_BusIO_Register::Adafruit_BusIO_Register(Adafruit_I2CDevice*, Adafruit_SPIDevice*, _Adafruit_BusIO_SPIRegType, unsigned short, unsigned char, unsigned char, unsigned char)
00004bb8 g     F .text.itcm	0000003c TwoWire::wait_idle()
00001360  w    F .text.itcm	00000004 Vector<float>::as_array()
0000638c g     F .text.itcm	00000000 .hidden __aeabi_uldivmod
00004034 g     F .text.itcm	00000024 Adafruit_LSM6DS::~Adafruit_LSM6DS()
20002789 g     O .bss	00000001 usb_configuration
00003570 g     F .text.itcm	0000001e Adafruit_I2CDevice::begin(bool)
00001cdc g     F .text.itcm	00000050 sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
00004078  w    F .text.itcm	0000000e Adafruit_LSM6DS_Gyro::~Adafruit_LSM6DS_Gyro()
00003e94 g     F .text.itcm	00000040 Adafruit_LIS3MDL::begin_I2C(unsigned char, TwoWire*)
600020cc  w    O .text.progmem	00000018 usb_string_manufacturer_name
000033b4 g     F .text.itcm	0000009c Adafruit_BusIO_Register::read(unsigned char*, unsigned char)
0000672c g     F .text.itcm	00000010 malloc
6000222c g     O .text.progmem	00000050 TwoWire::i2c1_hardware
00003504  w    F .text.itcm	0000001e TwoWire::read()
200002e8 g     O .data	000000c8 __mprec_tens
60001cd8 g     F .text.code	000000ec usb_init
000056c0 g     F .text.itcm	00000120 __kernel_cos
00000cb0 g     F .text.itcm	0000008c SynCor::spin()
00000da4 g     F .text.itcm	00000006 SynCorNode::n_inputs()
200026e4 g     O .bss	00000004 __malloc_top_pad
200027e0 g     O .bss	00000004 systick_safe_read
00004aa0 g     F .text.itcm	00000118 TwoWire::force_clock()
aaaaaaaf g       *ABS*	00000000 _flexram_bank_config
20001460 g     O .data	00000000 .hidden __dso_handle
00007d18 g     F .text.itcm	0000001c _localeconv_r
00007f5c g     F .text.itcm	00000012 __i2b
20000000 g       .data	00000000 _sdata
000031b4  w    F .text.itcm	00000006 usb_seremu_class::write(unsigned char)
60002134 g     O .text.progmem	00000049 usb_config_descriptor_480
000063bc g     F .text.itcm	000002e2 .hidden __udivmoddi4
20000468 g     O .data	0000001c vtable for Adafruit_LIS3MDL
00003070 g     F .text.itcm	0000002a String::reserve(unsigned int)
00007378 g     F .text.itcm	00000024 _sbrk_r
00000ebc g     F .text.itcm	00000008 SynCorNode::print_proc()
0000149c  w    F .text.itcm	0000001c Vector<SynCorNode*>::from_array(SynCorNode**, int)
000008bc  w    F .text.itcm	00000036 ComplimentaryFilter::context(Vector<float>*)
000036b4 g     F .text.itcm	00000032 Adafruit_I2CDevice::write_then_read(unsigned char const*, unsigned int, unsigned char*, unsigned int, bool)
00003d80 g     F .text.itcm	0000003a Adafruit_LIS3MDL::setRange(lis3mdl_range_t)
600016ac g     F .text.code	00000002 startup_default_early_hook
60001428 g     F .text.code	0000022c ResetHandler
0000190c g     F .text.itcm	0000000a digitalWrite
20002690 g     O .bss	00000004 EventResponder::lastYield
000014f4  w    F .text.itcm	00000004 Vector<SynCorNode*>::size()
00001200  w    F .text.itcm	0000003c Vector<int>::push(int)
00000a5c g     F .text.itcm	0000005c SynCor::collect_outputs(int, Vector<float>*)
200027e4 g     O .bss	00000010 extmem_smalloc_pool
200026dc g     O .bss	00000004 __malloc_max_sbrked_mem
00001924 g     F .text.itcm	00000080 pinMode
00003154 g     F .text.itcm	00000034 String::getBytes(unsigned char*, unsigned int, unsigned int) const
00000664 g     F .text.itcm	0000001c Process::clear()
00005e60 g     F .text.itcm	000000b0 __kernel_sin
00001288  w    F .text.itcm	00000008 Vector<float>::Vector()
60001ed8 g     F .text.code	0000007c TwoWire::setSDA(unsigned char)
200016fc g     O .data	00000140 Wire2
6000f000 g     O .text.csf	00000c00 hab_csf
20280000 g       .text.csf	00000000 _heap_end
0000a904 g       .ARM.exidx	00000000 __exidx_start
70000000 g       .bss.extram	00000000 _extram_end
20001e36 g     O .data	00000001 __fdlib_version
20002684 g     O .bss	00000004 EventResponder::firstYield
200006d0 g     O .data	00000004 _global_impure_ptr
000048e4 g     F .text.itcm	00000014 Adafruit_LSM6DSOX::Adafruit_LSM6DSOX()
00006f98 g     F .text.itcm	000003de _realloc_r
000034d0 g     F .text.itcm	00000032 Adafruit_BusIO_RegisterBits::write(unsigned long)
000066dc g     F .text.itcm	00000050 __libc_init_array
00003df4 g     F .text.itcm	00000044 Adafruit_LIS3MDL::reset()
000046d0 g     F .text.itcm	00000050 Adafruit_LSM6DS::configInt2(bool, bool, bool)
00004a0c  w    F .text.itcm	0000000c TwoWire::available()
00000ab8 g     F .text.itcm	00000168 SynCor::add(String, int, int, int, int*)
000031a4  w    F .text.itcm	00000004 usb_seremu_class::flush()
200002c0 g     O .data	00000028 __mprec_bigtens
00004cd4 g     F .text.itcm	00000120 TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)
00001f4c g     F .text.itcm	00000030 _sbrk
6000cb88 g       *ABS*	00000000 _sdataload
000081f0 g     F .text.itcm	00000042 __mcmp
0000402c  w    F .text.itcm	00000002 Adafruit_LSM6DS_Accelerometer::~Adafruit_LSM6DS_Accelerometer()
20001848 g     O .data	00000004 __brkval
00000ec4 g     F .text.itcm	0000001c SynCorNode::print_output()
6000204c g     F .text.code	00000000 _init
00003060 g     F .text.itcm	0000000e String::~String()
000044b8 g     F .text.itcm	00000042 Adafruit_LSM6DS::setAccelRange(accel_range)
00003108 g     F .text.itcm	0000001e String::String(String const&)
00001010 g     F .text.itcm	000000a8 FTYK::print(int, String)
00002e80 g     F .text.itcm	00000018 usb_seremu_write
000044fc g     F .text.itcm	0000003a Adafruit_LSM6DS::setGyroDataRate(data_rate)
600020e8 g     O .text.progmem	00000049 usb_config_descriptor_12
000057e0 g     F .text.itcm	0000067c __kernel_rem_pio2
2000056c g     O .data	00000024 vtable for TwoWire
200026e8 g     O .bss	00000004 blinker_timer_mark
000009fc g     F .text.itcm	00000060 SynCor::SynCor()
20002820 g       .bss	00000000 _ebss
0000387c g     F .text.itcm	00000058 Adafruit_SPIDevice::endTransaction()
00000f70 g     F .text.itcm	000000a0 FTYK::print(int)
00003f30 g     F .text.itcm	000000dc Adafruit_LIS3MDL::readMagneticField(float&, float&, float&)
00003524 g     F .text.itcm	00000012 Adafruit_I2CDevice::Adafruit_I2CDevice(unsigned char, TwoWire*)
000002d0 g     F .text.itcm	00000014 HidReport::HidReport()
60002010 g     F .text.code	0000003c TwoWire::configSCLpin(unsigned char)
00007ec0 g     F .text.itcm	00000040 __hi0bits
00004610 g     F .text.itcm	00000042 Adafruit_LSM6DS::configIntOutputs(bool, bool)
00004eb4 g     F .text.itcm	0000000c lpi2c3_isr()
20200660 g       .bss.dma	00000000 _heap_start
00001288  w    F .text.itcm	00000008 Vector<float>::Vector()
6000218c g     O .text.progmem	00000050 TwoWire::i2c4_hardware
000009bc  w    F .text.itcm	00000040 ComplimentaryFilter::reset()
0000309c g     F .text.itcm	00000042 String::copy(char const*, unsigned int)
000050c0 g     F .text.itcm	000001dc __ieee754_atan2
00000002 g       *ABS*	00000000 _itcm_block_count
200027a0 g     O .bss	00000020 endpoint0_transfer_data
00003190 g     F .text.itcm	00000004 operator delete(void*, unsigned int)
00002c50 g     F .text.itcm	00000030 tx_zero_pad
00000338 g     F .text.itcm	000000ce LSM6DSOX::run(Vector<float>*, Vector<float>*)
000019f4 g     F .text.itcm	000002b8 pwm_init
00003538 g     F .text.itcm	00000038 Adafruit_I2CDevice::detected()
0000123c  w    F .text.itcm	00000004 Vector<int>::size()
00003060 g     F .text.itcm	0000000e String::~String()
60001b58 g     F .text.code	00000064 usb_pll_start
000080a0 g     F .text.itcm	000000a0 __pow5mult
00004ec0 g     F .text.itcm	0000000c lpi2c4_isr()
00003b54 g     F .text.itcm	00000014 Adafruit_LIS3MDL::Adafruit_LIS3MDL()
0000366c g     F .text.itcm	00000048 Adafruit_I2CDevice::read(unsigned char*, unsigned int, bool)
00000db8 g     F .text.itcm	00000014 SynCorNode::is_configured()
00000000  w      *UND*	00000000 __deregister_frame_info
200027c0 g     O .bss	00000020 endpoint0_transfer_ack
00002860 g     F .text.itcm	00000028 usb_transmit
0000007c  w    F .text.itcm	00000024 Print::println(char const*)
00002f20 g     F .text.itcm	00000020 systick_isr
00004720 g     F .text.itcm	000000c4 Adafruit_LSM6DS::readAcceleration(float&, float&, float&)
2000146c g     O .data	00000010 Serial
600016ac  w    F .text.code	00000002 startup_early_hook
0000061c g     F .text.itcm	0000000e Process::output_dim()
000043c0 g     F .text.itcm	0000002c Adafruit_LSM6DS::Adafruit_LSM6DS()
000047e8 g     F .text.itcm	000000cc Adafruit_LSM6DS::readGyroscope(float&, float&, float&)
000031a8  w    F .text.itcm	00000004 usb_seremu_class::availableForWrite()
00003374 g     F .text.itcm	0000003e Adafruit_BusIO_Register::write(unsigned long, unsigned char)
00001290  w    F .text.itcm	00000010 Vector<float>::~Vector()
00004ed0 g     F .text.itcm	000000a0 cos
00007d40 g     F .text.itcm	00000000 memchr
00001514 g     F .text.itcm	000002c4 set_arm_clock
20002740 g     O .bss	00000004 systick_cycle_count
20001e20 g     O .data	00000016 usb_string_serial_number_default
00007b48 g     F .text.itcm	000001d0 _free_r
00000648 g     F .text.itcm	0000001c Process::print()
000048b4  w    F .text.itcm	00000014 Adafruit_LSM6DSOX::~Adafruit_LSM6DSOX()
000079d4 g     F .text.itcm	000000d8 __call_exitprocs
00003b68 g     F .text.itcm	000000a8 Adafruit_LIS3MDL::read()
20001dc0 g     O .data	00000004 __malloc_sbrk_base
000014f8  w    F .text.itcm	0000001a Vector<SynCorNode*>::operator[](int)
000004c8 g     F .text.itcm	00000134 LSM6DSOX::LSM6DSOX()
0000126c  w    F .text.itcm	0000001a Vector<int>::operator[](int)
00001194  w    F .text.itcm	00000008 Vector<int>::Vector()
000004c8 g     F .text.itcm	00000134 LSM6DSOX::LSM6DSOX()
00004028  w    F .text.itcm	00000002 Adafruit_LSM6DS_Gyro::~Adafruit_LSM6DS_Gyro()
00004f70 g     F .text.itcm	000000a0 sin
20000524 g     O .data	0000001c vtable for Adafruit_LSM6DS_Accelerometer
00008140 g     F .text.itcm	000000ae __lshift
00002830 g     F .text.itcm	0000002e usb_prepare_transfer
00005010 g     F .text.itcm	00000004 atan2
0000299c g     F .text.itcm	00000074 usb_rawhid_configure
00001dbc g     F .text.itcm	00000190 unused_interrupt_vector
0000a7e8 g     F .text.itcm	00000100 __ssprint_r
20002748 g     O .bss	00000004 usb_timer0_callback
60001bbc g     F .text.code	0000011c tempmon_init
00008404 g     F .text.itcm	0000005e _vasnprintf_r
00003194  w    F .text.itcm	00000002 serialEvent()
00007930 g     F .text.itcm	000000a4 __register_exitproc
00002acc g     F .text.itcm	000000b4 usb_seremu_configure
00000710  w    F .text.itcm	000001ac ComplimentaryFilter::run(Vector<float>*, Vector<float>*)
00007f70 g     F .text.itcm	00000130 __multiply
00000025 g       *ABS*	00000000 _teensy_model_identifier
0000781c g     F .text.itcm	00000066 strncpy
200026b4 g     O .bss	00000028 __malloc_current_mallinfo
00002b80 g     F .text.itcm	00000068 usb_seremu_getchar
00008348 g     F .text.itcm	000000ba __d2b
20002694 g     O .bss	00000020 HardwareSerial::s_serials_with_serial_events
00000e80 g     F .text.itcm	0000003c SynCorNode::run_proc(Vector<float>*)
60001dc4 g     F .text.code	00000054 _reboot_Teensyduino_
000048f8 g     F .text.itcm	000000b4 Adafruit_LSM6DSOX::_init(long)
600016b0 g     F .text.code	00000002 startup_default_middle_hook
00006f88 g     F .text.itcm	00000010 realloc
0000214c g     F .text.itcm	00000618 usb_isr
000066a4 g     F .text.itcm	0000000c __cxa_atexit
00001290  w    F .text.itcm	00000010 Vector<float>::~Vector()
00004578 g     F .text.itcm	00000098 Adafruit_LSM6DS::_init(long)
000012fc  w    F .text.itcm	0000001c Vector<float>::from_array(float*, int)
00000308 g     F .text.itcm	00000006 LSM6DSOX::setup(Vector<float>*)
000030e0 g     F .text.itcm	00000026 String::String(char const*)
00001240  w    F .text.itcm	0000002c Vector<int>::find(int)
2000273c g     O .bss	00000004 scale_cpu_cycles_to_microseconds
0000144c  w    F .text.itcm	00000008 Vector<SynCorNode*>::Vector()
00003b54 g     F .text.itcm	00000014 Adafruit_LIS3MDL::Adafruit_LIS3MDL()
000066a0  w    F .text.itcm	00000002 .hidden __aeabi_ldiv0
00002be8 g     F .text.itcm	00000044 usb_seremu_peekchar
00004030  w    F .text.itcm	00000002 Adafruit_LSM6DS_Temp::~Adafruit_LSM6DS_Temp()
00000258 g     F .text.itcm	00000054 nd_norm(float*, int)
200019b8 g     O .data	00000408 __malloc_av_
20000590 g     O .data	0000002c vtable for LSM6DSOX
00006f80 g     F .text.itcm	00000002 __malloc_lock
00004478 g     F .text.itcm	0000003e Adafruit_LSM6DS::setAccelDataRate(data_rate)
20002000 g     O .data	000002c0 _VectorsRam
00008464 g     F .text.itcm	0000005e _calloc_r
00003128 g     F .text.itcm	0000002c String::equals(char const*) const
20001e37 g     O .data	00000001 yield_active_check_flags
2000278a g     O .bss	00000001 usb_high_speed
000002ac g     F .text.itcm	00000022 weighted_vector_addition(float*, float*, float, float, int, float*)
00000f40 g     F .text.itcm	0000002c FTYK::micros(int)
00006ee4 g     F .text.itcm	0000009a memset
20000484  w    O .data	00000024 vtable for usb_seremu_class
000000a0 g     F .text.itcm	000001ac main
00000408 g     F .text.itcm	000000c0 LSM6DSOX::print()
200026e0 g     O .bss	00000004 __malloc_max_total_mem
00003af4  w    F .text.itcm	00000002 Adafruit_LIS3MDL::~Adafruit_LIS3MDL()
20200000 g     O .bss.dma	00000049 usb_descriptor_buffer
0000402c  w    F .text.itcm	00000002 Adafruit_LSM6DS_Accelerometer::~Adafruit_LSM6DS_Accelerometer()
00001318  w    F .text.itcm	00000044 Vector<float>::push(float)
00004330 g     F .text.itcm	00000048 Adafruit_LSM6DS_Accelerometer::getSensor(sensor_t*)
00006240 g     F .text.itcm	00000004 matherr
000028b0 g     F .text.itcm	00000058 usb_init_serialnumber
00004538 g     F .text.itcm	00000040 Adafruit_LSM6DS::setGyroRange(gyro_range)
600020a4 g       .text.code	00000000 __init_array_end
000085f0 g     F .text.itcm	00000c84 _dtoa_r
0000674c g     F .text.itcm	00000570 _malloc_r
2000277b g     O .bss	00000001 HardwareSerial::s_count_serials_with_serial_events
000078e8 g     F .text.itcm	0000001a __ascii_wctomb
00000ee0 g     F .text.itcm	00000030 setup_blink()
00003524 g     F .text.itcm	00000012 Adafruit_I2CDevice::Adafruit_I2CDevice(unsigned char, TwoWire*)
200005bc  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
000048b4  w    F .text.itcm	00000014 Adafruit_LSM6DSOX::~Adafruit_LSM6DSOX()
00004a04 g     F .text.itcm	00000008 SPIClass::transfer(void const*, void*, unsigned int)
00001454  w    F .text.itcm	00000010 Vector<SynCorNode*>::~Vector()
000034a4 g     F .text.itcm	0000000e Adafruit_BusIO_RegisterBits::Adafruit_BusIO_RegisterBits(Adafruit_BusIO_Register*, unsigned char, unsigned char)
00007aac g     F .text.itcm	0000009c _malloc_trim_r
600020e4 g     O .text.progmem	00000004 string0
00000f30 g     F .text.itcm	00000010 FTYK::set(int)
000043c0 g     F .text.itcm	0000002c Adafruit_LSM6DS::Adafruit_LSM6DS()
600016b4  w    F .text.code	00000002 startup_late_hook
0000060c g     F .text.itcm	0000000e Process::context_dim()
000073a8 g     F .text.itcm	000002dc strcmp
6000218a g     O .text.progmem	00000001 _serialEvent_default
00003d48 g     F .text.itcm	00000038 Adafruit_LIS3MDL::setOperationMode(lis3mdl_operationmode_t)
0000400c g     F .text.itcm	0000001c Adafruit_LSM6DS::~Adafruit_LSM6DS()
20000000 g     O .data	00000280 endpoint_queue_head
20000540 g     O .data	0000002c vtable for Process
600020a4  w    O .text.progmem	00000026 usb_string_product_name
00003590 g     F .text.itcm	00000068 Adafruit_I2CDevice::write(unsigned char const*, unsigned int, bool, unsigned char const*, unsigned int)
000006cc g     F .text.itcm	00000028 Process::run(Vector<float>*, Vector<float>*)
00006364 g     F .text.itcm	0000001a copysign
000017d8 g     F .text.itcm	000000cc delay
00003ed4 g     F .text.itcm	00000058 Adafruit_LIS3MDL::configInterrupt(bool, bool, bool, bool, bool, bool)
00000dac g     F .text.itcm	0000000c SynCorNode::input_id(int)
0000a900 g     F .fini	00000000 _fini
00000920  w    F .text.itcm	0000009c ComplimentaryFilter::print()
00004a34 g     F .text.itcm	00000030 TwoWire::write(unsigned char)
60001020 g     O .text.headers	0000000c BootData
00005f10 g     F .text.itcm	00000204 atan
0000301c g     F .text.itcm	0000001e Print::printf(char const*, ...)
00001f80 g     F .text.itcm	00000004 Panic_Temp_isr
00001364  w    F .text.itcm	00000054 Vector<float>::append(Vector<float>*)
00001470  w    F .text.itcm	0000002c Vector<SynCorNode*>::reset(int)
00007904 g     F .text.itcm	0000002c _write_r
0000144c  w    F .text.itcm	00000008 Vector<SynCorNode*>::Vector()
000031a0  w    F .text.itcm	00000004 usb_seremu_class::available()
000030e0 g     F .text.itcm	00000026 String::String(char const*)
20001dc8 g     O .data	00000004 _impure_ptr
00006248 g     F .text.itcm	0000011c scalbn
2000147c g     O .data	00000140 Wire
00002f40 g     F .text.itcm	0000005c IntervalTimer::end()
60002098 g       .text.code	00000000 __preinit_array_end
00006cbc g     F .text.itcm	0000002a __ascii_mbtowc
00000e04 g     F .text.itcm	00000054 SynCorNode::SynCorNode(Process*, int, int, int*)
00000e58 g     F .text.itcm	00000026 SynCorNode::setup_proc()
00000dd4 g     F .text.itcm	0000000a SynCorNode::set_config(int)
00004a18  w    F .text.itcm	00000018 TwoWire::peek()
00004a30  w    F .text.itcm	00000002 TwoWire::flush()
20000f8c g     O .data	0000009c usb_descriptor_list
000012a0  w    F .text.itcm	0000000c Vector<float>::clear()
000048e4 g     F .text.itcm	00000014 Adafruit_LSM6DSOX::Adafruit_LSM6DSOX()
0000553c g     F .text.itcm	00000184 __ieee754_sqrt
20070000 g       .text.csf	00000000 _estack
60001f8c g     F .text.code	00000084 TwoWire::setSCL(unsigned char)
20000450 g     O .data	00000018 vtable for Adafruit_LSM6DS
00004a64 g     F .text.itcm	0000003a TwoWire::write(unsigned char const*, unsigned int)
0000300c  w    F .text.itcm	0000000e _write
000006a4 g     F .text.itcm	00000028 Process::context(Vector<float>*)
200022c0 g       .data	00000000 _edata
2000277f g     O .bss	00000001 external_psram_size
00001194  w    F .text.itcm	00000008 Vector<int>::Vector()
00003e38 g     F .text.itcm	0000005c Adafruit_LIS3MDL::_init()
00004ea8 g     F .text.itcm	0000000c lpi2c1_isr()
000042e4 g     F .text.itcm	0000004c Adafruit_LSM6DS_Gyro::getSensor(sensor_t*)
000019a4 g     F .text.itcm	0000004e ultoa
000011e4  w    F .text.itcm	0000001c Vector<int>::from_array(int*, int)
60001e18 g     F .text.code	000000c0 TwoWire::begin()
00003af0  w    F .text.itcm	00000002 Adafruit_Sensor::enableAutoRange(bool)
00000310 g     F .text.itcm	00000028 LSM6DSOX::context(Vector<float>*)
00003188 g     F .text.itcm	00000004 operator new(unsigned int)
00002ed8 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
20001dc4 g     O .data	00000004 __malloc_trim_threshold
000066bc g     F .text.itcm	00000020 exit
000034a4 g     F .text.itcm	0000000e Adafruit_BusIO_RegisterBits::Adafruit_BusIO_RegisterBits(Adafruit_BusIO_Register*, unsigned char, unsigned char)
00008234 g     F .text.itcm	00000114 __mdiff
000048c8  w    F .text.itcm	0000001c Adafruit_LSM6DSOX::~Adafruit_LSM6DSOX()
200004c0  w    O .data	0000002c vtable for ComplimentaryFilter
00004378 g     F .text.itcm	00000048 Adafruit_LSM6DS_Temp::getSensor(sensor_t*)
00001454  w    F .text.itcm	00000010 Vector<SynCorNode*>::~Vector()
0000119c  w    F .text.itcm	00000010 Vector<int>::~Vector()
200005cc g     O .data	00000101 _ctype_
000014b8  w    F .text.itcm	0000003c Vector<SynCorNode*>::push(SynCorNode*)
60002098 g       .text.code	00000000 __init_array_start
000066a0  w    F .text.itcm	00000002 .hidden __aeabi_idiv0
000006f4  w    F .text.itcm	0000001c ComplimentaryFilter::clear()
20001464 g     O .data	00000004 F_BUS_ACTUAL
00001f7c  w    F .text.itcm	00000004 _exit
00000000 g       .text.itcm	00000000 _stext
20001844 g     O .data	00000004 IntervalTimer::nvic_priorites
00000de0 g     F .text.itcm	00000024 SynCorNode::set_process(Process*)
00007740 g     F .text.itcm	000000dc strlen
0000111c g     F .text.itcm	00000078 Vector<float>::print()
2000278c g     O .bss	00000001 usb_seremu_online
0000303c  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
600020a4 g     O .text.progmem	00000026 usb_string_product_name_default
000078d0 g     F .text.itcm	00000018 vdprintf
000002d0 g     F .text.itcm	00000014 HidReport::HidReport()
00000e04 g     F .text.itcm	00000054 SynCorNode::SynCorNode(Process*, int, int, int*)
600016b0  w    F .text.code	00000002 startup_middle_hook
00002fa0 g     F .text.itcm	0000004a Print::print(String const&)
600016b8 g     F .text.code	000000e4 configure_cache
000032d8 g     F .text.itcm	0000009c Adafruit_BusIO_Register::write(unsigned char*, unsigned char)
00000000  w      *UND*	00000000 _Jv_RegisterClasses
00003450 g     F .text.itcm	00000052 Adafruit_BusIO_Register::read()
60002098 g       .text.code	00000000 __preinit_array_start
00002888 g     F .text.itcm	00000024 usb_receive
000038d4 g     F .text.itcm	00000120 Adafruit_SPIDevice::beginTransactionWithAssertingCS()
200004ec g     O .data	0000001c vtable for Adafruit_LSM6DS_Gyro
00007f00 g     F .text.itcm	0000005a __lo0bits
00002c80 g     F .text.itcm	00000068 tx_queue_transfer
0000fc00 g       *ABS*	00000000 _flashimagelen
00000dd0 g     F .text.itcm	00000004 SynCorNode::config()
00004140 g     F .text.itcm	000001a4 Adafruit_LSM6DS::_read()
00006380 g     F .text.itcm	0000000a __aeabi_atexit
00000000  w      *UND*	00000000 __register_frame_info
00001cac g     F .text.itcm	00000030 rtc_get
0000119c  w    F .text.itcm	00000010 Vector<int>::~Vector()
00004068  w    F .text.itcm	0000000e Adafruit_LSM6DS_Accelerometer::~Adafruit_LSM6DS_Accelerometer()
00003af4  w    F .text.itcm	00000002 Adafruit_LIS3MDL::~Adafruit_LIS3MDL()
70000000 g       .bss.extram	00000000 _extram_start
00002f1c g     F .text.itcm	00000004 pendablesrvreq_isr
00004100 g     F .text.itcm	00000040 Adafruit_LSM6DS_Accelerometer::getEvent(sensors_event_t*)
00004088 g     F .text.itcm	00000038 Adafruit_LSM6DS_Temp::getEvent(sensors_event_t*)
00002f9c  w    F .text.itcm	00000004 Print::availableForWrite()
000012ac  w    F .text.itcm	00000022 Vector<float>::Vector(int)
2000184c g     O .data	0000016c __global_locale
00000300 g     F .text.itcm	00000006 LSM6DSOX::clear()
000036e8 g     F .text.itcm	00000194 Adafruit_SPIDevice::transfer(unsigned char*, unsigned int)
000027c8 g     F .text.itcm	00000068 usb_config_tx
0000673c g     F .text.itcm	00000010 free
00007e40 g     F .text.itcm	00000080 __multadd
00007e2c g     F .text.itcm	00000012 _Bfree
000043ec g     F .text.itcm	00000042 Adafruit_LSM6DS::begin_I2C(unsigned char, TwoWire*, long)
20001e20  w    O .data	00000016 usb_string_serial_number
0000400c g     F .text.itcm	0000001c Adafruit_LSM6DS::~Adafruit_LSM6DS()


