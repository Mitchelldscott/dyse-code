
/Users/mitchellscott/Desktop/rufous/src/firmware/build/examples/system_graph/graph_tests.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
600020a0 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
0000a180 l    d  .fini	00000000 .fini
0000a184 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
200022c0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
6000e6c4 l    d  .text.csf	00000000 .text.csf
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000016 memory_copy
60001418 l     F .text.code	00000010 memory_clear
00000000 l    df *ABS*	00000000 analog.c
20002751 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 tempmon.c
2000272c l     O .bss	00000004 s_hotTemp
20002730 l     O .bss	00000004 s_hot_ROOM
20002734 l     O .bss	00000004 s_roomC_hotC
20002728 l     O .bss	00000004 s_hotCount
00000000 l    df *ABS*	00000000 usb.c
00001900 l     F .text.itcm	00000090 schedule_transfer
00001990 l     F .text.itcm	00000036 run_callbacks
000019c8 l     F .text.itcm	000000a0 endpoint0_transmit.constprop.1
200026f4 l     O .bss	00000004 endpointN_notify_mask
20002757 l     O .bss	00000001 sof_usage
200026f0 l     O .bss	00000004 endpoint0_notify_mask
2000275e l     O .bss	00000001 usb_reboot_timer
20002660 l     O .bss	00000008 endpoint0_setupdata
200026f8 l     O .bss	00000008 reply_buffer
200026e8 l     O .bss	00000008 endpoint0_buffer
00000000 l    df *ABS*	00000000 WireIMXRT.cpp
00000000 l    df *ABS*	00000000 /Users/mitchellscott/Library/Arduino15/packages/teensy/tools/teensy-compile/5.4.1/arm/bin/../lib/gcc/arm-none-eabi/5.4.1/armv7e-m/fpu/fpv5-d16/crti.o
00000000 l    df *ABS*	00000000 /Users/mitchellscott/Library/Arduino15/packages/teensy/tools/teensy-compile/5.4.1/arm/bin/../lib/gcc/arm-none-eabi/5.4.1/armv7e-m/fpu/fpv5-d16/crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 __do_global_dtors_aux
20002668 l       .bss	00000000 completed.8605
00000044 l     F .text.itcm	00000000 frame_dummy
2000266c l       .bss	00000000 object.8610
60002098 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 Tone.cpp
00002918 l     F .text.itcm	00000018 _GLOBAL__sub_I__Z4tonehtm
20001804 l     O .data	00000008 tone_timer
00000000 l    df *ABS*	00000000 usb_desc.c
6000217c l     O .text.progmem	0000000a qualifier_descriptor
20001dc4 l     O .data	00000021 seremu_report_desc
20001da8 l     O .data	0000001c rawhid_report_desc
20001d94 l     O .data	00000012 device_descriptor
00000000 l    df *ABS*	00000000 serialEvent.cpp
00000000 l    df *ABS*	00000000 graph_tests.cpp
000002e8 l     F .text.itcm	000000d0 Process_Factory::new_proc(String) [clone .isra.1] [clone .constprop.3]
00000000 l    df *ABS*	00000000 linear_algebra.cpp
00000000 l    df *ABS*	00000000 lsm6dsox.cpp
00000000 l    df *ABS*	00000000 graph_node.cpp
00000000 l    df *ABS*	00000000 process.cpp
00000000 l    df *ABS*	00000000 timing.cpp
00000000 l    df *ABS*	00000000 vector.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00001240 l     F .text.itcm	0000004c digitalWrite.part.0
0000128c l     F .text.itcm	0000001c digitalRead.part.1
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 usb_rawhid.c
00002224 l     F .text.itcm	00000034 rx_event
00002258 l     F .text.itcm	00000060 rx_queue_transfer
20002759 l     O .bss	00000001 tx_head
200022e0 l     O .bss	00000080 rx_transfer
20002755 l     O .bss	00000001 rx_tail
20002714 l     O .bss	00000005 rx_list
20200060 l     O .bss.dma	00000100 rx_buffer
20200160 l     O .bss.dma	00000100 txbuffer
20002753 l     O .bss	00000001 rx_head
20002460 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 usb_seremu.c
0000232c l     F .text.itcm	00000064 rx_queue_transfer
00002390 l     F .text.itcm	00000058 rx_event
00002604 l     F .text.itcm	0000002c usb_seremu_flush_callback
00002630 l     F .text.itcm	00000140 usb_seremu_write.part.1
20002756 l     O .bss	00000001 rx_tail
2000275b l     O .bss	00000001 tx_noautoflush
2000275a l     O .bss	00000001 tx_head
20002360 l     O .bss	00000100 rx_transfer
20002704 l     O .bss	00000010 rx_index
2000271c l     O .bss	00000009 rx_list
20200260 l     O .bss.dma	00000100 rx_buffer
20200360 l     O .bss.dma	00000300 txbuffer
2000274c l     O .bss	00000002 tx_available
20002700 l     O .bss	00000004 rx_available
20002754 l     O .bss	00000001 rx_head
20002758 l     O .bss	00000001 transmit_previous_timeout
200024e0 l     O .bss	00000180 tx_transfer
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 IntervalTimer.cpp
200022c0 l     O .bss	00000010 funct_table
00000000 l    df *ABS*	00000000 Print.cpp
00000000 l    df *ABS*	00000000 WString.cpp
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 yield.cpp
20002750 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 Adafruit_BusIO_Register.cpp
00000000 l    df *ABS*	00000000 Adafruit_I2CDevice.cpp
00000000 l    df *ABS*	00000000 Adafruit_SPIDevice.cpp
00000000 l    df *ABS*	00000000 Adafruit_ICM20X.cpp
00000000 l    df *ABS*	00000000 Adafruit_LIS3MDL.cpp
20000428 l     O .data	00000010 CSWTCH.19
00000000 l    df *ABS*	00000000 Adafruit_LSM6DS.cpp
200003f4 l     O .data	00000034 CSWTCH.18
20000438 l     O .data	00000010 CSWTCH.19
00000000 l    df *ABS*	00000000 Adafruit_LSM6DSOX.cpp
00000000 l    df *ABS*	00000000 SPI.cpp
00004224 l     F .text.itcm	00000058 SPIClass::transfer(void const*, void*, unsigned int) [clone .part.11]
00000000 l    df *ABS*	00000000 s_cos.c
00000000 l    df *ABS*	00000000 s_sin.c
00000000 l    df *ABS*	00000000 w_atan2.c
00000000 l    df *ABS*	00000000 w_sqrt.c
00000000 l    df *ABS*	00000000 e_atan2.c
00000000 l    df *ABS*	00000000 e_rem_pio2.c
20000a5c l     O .data	00000080 npio2_hw
20000e48 l     O .data	00000108 two_over_pi
00000000 l    df *ABS*	00000000 e_sqrt.c
00000000 l    df *ABS*	00000000 k_cos.c
00000000 l    df *ABS*	00000000 k_rem_pio2.c
20000a4c l     O .data	00000010 init_jk
20000280 l     O .data	00000040 PIo2
00000000 l    df *ABS*	00000000 k_sin.c
00000000 l    df *ABS*	00000000 s_atan.c
200003d0 l     O .data	00000020 atanlo
200003b0 l     O .data	00000020 atanhi
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_floor.c
00000000 l    df *ABS*	00000000 s_matherr.c
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 atexit_arm.cc
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 cxa_atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 lib_a-memcpy.o
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 realloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 lib_a-strcmp.o
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 vdprintf.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lib_a-memchr.o
00000000 l    df *ABS*	00000000 mprec.c
20000adc l     O .data	0000000c p05.6087
00000000 l    df *ABS*	00000000 vasnprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 dtoa.c
00007d44 l     F .text.itcm	00000128 quorem
00000000 l    df *ABS*	00000000 vfprintf.c
20000fec l     O .data	00000010 zeroes.7258
200006cc l     O .data	00000010 blanks.7257
00000000 l    df *ABS*	00000000 vfprintf.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 impure.c
20001000 l     O .data	00000428 impure_data
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 s_lib_ver.c
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 
00000000 l       *UND*	00000000 __fini_array_end
00000000 l       *UND*	00000000 __bss_start__
6000f400 l       .text.csf	00000000 __text_csf_end
00000000 l       *UND*	00000000 __bss_end__
00000000 l       *UND*	00000000 software_init_hook
00000000 l       *UND*	00000000 __fini_array_start
00000000 l       *UND*	00000000 hardware_init_hook
00000000 l       *UND*	00000000 __libc_fini
00000000 l       *UND*	00000000 __stack
60002058 l     F .text.code	00000008 __main_veneer
60002060 l     F .text.code	00000008 __sm_set_pool_veneer
60002068 l     F .text.code	00000008 __set_arm_clock_veneer
60002070 l     F .text.code	00000008 __delay_veneer
60002078 l     F .text.code	00000008 ____libc_init_array_veneer
60002080 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60002088 l     F .text.code	00000008 __memset_veneer
60002090 l     F .text.code	00000008 __pwm_init_veneer
0000a168 l     F .text.itcm	00000008 ___init_veneer
0000a170 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
0000a178 l     F .text.itcm	00000008 ___ZN7TwoWire5beginEv_veneer
00000b3c g     F .text.itcm	00000024 Process::setup(Vector<float>*)
00000ab8 g     F .text.itcm	0000000e Process::input_dim()
00006efc g     F .text.itcm	000000ba strcpy
000038a0  w    F .text.itcm	00000002 Adafruit_LSM6DS_Gyro::~Adafruit_LSM6DS_Gyro()
00003270 g     F .text.itcm	0000001e Adafruit_SPIDevice::endTransactionWithDeassertingCS()
0000290c  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
00002548 g     F .text.itcm	00000024 usb_seremu_available
00002b28 g     F .text.itcm	0000002a Adafruit_BusIO_Register::Adafruit_BusIO_Register(Adafruit_I2CDevice*, Adafruit_SPIDevice*, _Adafruit_BusIO_SPIRegType, unsigned short, unsigned char, unsigned char, unsigned char)
000038d0  w    F .text.itcm	0000000e Adafruit_LSM6DS_Temp::~Adafruit_LSM6DS_Temp()
00002a08 g     F .text.itcm	00000004 operator new[](unsigned int)
600016b4 g     F .text.code	00000002 startup_default_late_hook
0000598c g     F .text.itcm	0000000e fabs
00002a38  w    F .text.itcm	000000f0 yield
00000c7c  w    F .text.itcm	0000000c Vector<int>::clear()
00004890 g     F .text.itcm	000000a8 sqrt
20002748 g     O .bss	00000004 usb_timer1_callback
600020c8 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
6000179c g     F .text.code	000003bc configure_external_ram
20001584 g     O .data	00000140 Wire1
00000e68  w    F .text.itcm	0000002a Vector<float>::slice(float*, int, int)
00002a14  w    F .text.itcm	00000004 usb_seremu_class::peek()
60001f54 g     F .text.code	00000038 TwoWire::configSDApin(unsigned char)
00003ecc g     F .text.itcm	0000007c Adafruit_LSM6DS::configInt1(bool, bool, bool, bool, bool)
000028bc g     F .text.itcm	00000020 Print::println()
0000466c g     F .text.itcm	000000b4 TwoWire::isr()
00003938 g     F .text.itcm	00000040 Adafruit_LSM6DS_Gyro::getEvent(sensors_event_t*)
0000027c  w    F .text.itcm	0000002c ComplimentaryFilter::setup(Vector<float>*)
00003ca8 g     F .text.itcm	00000048 Adafruit_LSM6DS::reset()
000067fc g     F .text.itcm	00000002 __malloc_unlock
20000500 g     O .data	0000001c vtable for Adafruit_LSM6DS_Temp
60001654 g     F .text.code	00000058 analog_init
00007104 g     F .text.itcm	0000004a _vdprintf_r
00000a8c g     F .text.itcm	00000004 GraphNode::output()
000038a8  w    F .text.itcm	00000002 Adafruit_LSM6DS_Temp::~Adafruit_LSM6DS_Temp()
00002e74 g     F .text.itcm	00000074 Adafruit_I2CDevice::_read(unsigned char*, unsigned int, bool)
000009c0 g     F .text.itcm	00000068 GraphNode::GraphNode(Process*, int, int, int*)
20001430 g     O .data	00000004 F_CPU_ACTUAL
00006694 g     F .text.itcm	000000c6 memmove
00000bb0 g     F .text.itcm	00000020 FTYK::FTYK()
00003290 g     F .text.itcm	0000006a Adafruit_SPIDevice::write(unsigned char const*, unsigned int, unsigned char const*, unsigned int)
00007660 g     F .text.itcm	0000004c _Balloc
0000a18c g       .ARM.exidx	00000000 __exidx_end
00000e1c  w    F .text.itcm	0000004c Vector<float>::insert(float*, int, int)
2000274e g     O .bss	00000001 EventResponder::runningFromYield
00000d34  w    F .text.itcm	0000002c Vector<float>::reset(int)
000018a0 g     F .text.itcm	00000060 tempmonGetTemp
00005f28 g     F .text.itcm	0000000c __errno
00000ae8 g     F .text.itcm	0000001c Process::reset()
60001000 g     O .text.headers	00000020 ImageVectorTable
00002a18  w    F .text.itcm	00000004 usb_seremu_class::read()
00003554 g     F .text.itcm	00000070 Adafruit_LIS3MDL::setDataRate(lis3mdl_dataRate_t)
2000268c g     O .bss	00000004 EventResponder::firstInterrupt
000021c8 g     F .text.itcm	00000004 usb_transfer_status
000006a8 g     F .text.itcm	0000001a LSM6DSOX::reset()
200004a0 g     O .data	00000018 vtable for Adafruit_LSM6DSOX
00001648 g     F .text.itcm	00000090 sm_set_pool
00000d10  w    F .text.itcm	00000022 Vector<float>::Vector(int)
000027b8 g     F .text.itcm	0000003c usb_seremu_flush_output
00002770 g     F .text.itcm	0000002c usb_seremu_putchar
200006dc g     O .data	00000370 digital_pin_to_info_PGM
00003374 g     F .text.itcm	0000004c Adafruit_LIS3MDL::getSensor(sensor_t*)
200027b4 g     O .bss	00000004 errno
00000c88  w    F .text.itcm	0000002c Vector<int>::reset(int)
000059a0 g     F .text.itcm	00000118 floor
600021d8 g     O .text.progmem	00000050 TwoWire::i2c3_hardware
0000a188 g       .text.itcm	00000000 _etext
000034e8 g     F .text.itcm	0000006c Adafruit_LIS3MDL::setPerformanceMode(lis3mdl_performancemode_t)
200022c0 g       .bss	00000000 _sbss
00003638 g     F .text.itcm	00000038 Adafruit_LIS3MDL::getRange()
0000348c g     F .text.itcm	0000005c Adafruit_LIS3MDL::getEvent(sensors_event_t*)
00000e94  w    F .text.itcm	0000001a Vector<float>::operator[](int)
000032fc g     F .text.itcm	00000070 Adafruit_SPIDevice::write_then_read(unsigned char const*, unsigned int, unsigned char*, unsigned int, unsigned char)
000027b4 g     F .text.itcm	00000004 usb_seremu_write_buffer_free
000012b4 g     F .text.itcm	0000000c digitalRead
60002278 g       *ABS*	00000000 _stextload
00002080 g     F .text.itcm	00000064 usb_config_rx
00002a28  w    F .text.itcm	00000008 usb_seremu_class::write(unsigned char const*, unsigned int)
00000bb0 g     F .text.itcm	00000020 FTYK::FTYK()
00000dc0  w    F .text.itcm	00000004 Vector<float>::size()
0000446c g     F .text.itcm	000000e0 TwoWire::endTransmission(unsigned char)
00004b18 g     F .text.itcm	0000029c __ieee754_rem_pio2
20002688 g     O .bss	00000004 EventResponder::lastInterrupt
00006560 g     F .text.itcm	00000134 memcpy
00002d30 g     F .text.itcm	0000001a Adafruit_BusIO_RegisterBits::read()
00008af8 g     F .text.itcm	00001570 _svfprintf_r
20002740 g     O .bss	00000004 systick_millis_count
000033c0  w    F .text.itcm	0000000e Adafruit_LIS3MDL::~Adafruit_LIS3MDL()
00002b28 g     F .text.itcm	0000002a Adafruit_BusIO_Register::Adafruit_BusIO_Register(Adafruit_I2CDevice*, Adafruit_SPIDevice*, _Adafruit_BusIO_SPIRegType, unsigned short, unsigned char, unsigned char, unsigned char)
00004430 g     F .text.itcm	0000003c TwoWire::wait_idle()
00000dc4  w    F .text.itcm	00000004 Vector<float>::as_array()
00005c04 g     F .text.itcm	00000000 .hidden __aeabi_uldivmod
000038ac g     F .text.itcm	00000024 Adafruit_LSM6DS::~Adafruit_LSM6DS()
2000275c g     O .bss	00000001 usb_configuration
00002dec g     F .text.itcm	0000001e Adafruit_I2CDevice::begin(bool)
000015f8 g     F .text.itcm	00000050 sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
000038f0  w    F .text.itcm	0000000e Adafruit_LSM6DS_Gyro::~Adafruit_LSM6DS_Gyro()
00003710 g     F .text.itcm	00000040 Adafruit_LIS3MDL::begin_I2C(unsigned char, TwoWire*)
600020c8  w    O .text.progmem	00000018 usb_string_manufacturer_name
00002c30 g     F .text.itcm	0000009c Adafruit_BusIO_Register::read(unsigned char*, unsigned char)
00005fa4 g     F .text.itcm	00000010 malloc
60002228 g     O .text.progmem	00000050 TwoWire::i2c1_hardware
00002d80  w    F .text.itcm	0000001e TwoWire::read()
200002e8 g     O .data	000000c8 __mprec_tens
60001cd8 g     F .text.code	000000ec usb_init
00004f38 g     F .text.itcm	00000120 __kernel_cos
200026e4 g     O .bss	00000004 __malloc_top_pad
200027a0 g     O .bss	00000004 systick_safe_read
00004318 g     F .text.itcm	00000118 TwoWire::force_clock()
aaaaaaaf g       *ABS*	00000000 _flexram_bank_config
20001428 g     O .data	00000000 .hidden __dso_handle
00007598 g     F .text.itcm	0000001c _localeconv_r
000077dc g     F .text.itcm	00000012 __i2b
20000000 g       .data	00000000 _sdata
00002a30  w    F .text.itcm	00000006 usb_seremu_class::write(unsigned char)
60002130 g     O .text.progmem	00000049 usb_config_descriptor_480
00005c34 g     F .text.itcm	000002e2 .hidden __udivmoddi4
20000460 g     O .data	0000001c vtable for Adafruit_LIS3MDL
00002940 g     F .text.itcm	0000002a String::reserve(unsigned int)
00006bf0 g     F .text.itcm	00000024 _sbrk_r
00000244  w    F .text.itcm	00000036 ComplimentaryFilter::context(Vector<float>*)
00002f30 g     F .text.itcm	00000032 Adafruit_I2CDevice::write_then_read(unsigned char const*, unsigned int, unsigned char*, unsigned int, bool)
000035fc g     F .text.itcm	0000003a Adafruit_LIS3MDL::setRange(lis3mdl_range_t)
600016ac g     F .text.code	00000002 startup_default_early_hook
60001428 g     F .text.code	0000022c ResetHandler
000012a8 g     F .text.itcm	0000000a digitalWrite
20002690 g     O .bss	00000004 EventResponder::lastYield
200027a4 g     O .bss	00000010 extmem_smalloc_pool
200026dc g     O .bss	00000004 __malloc_max_sbrked_mem
00000b20 g     F .text.itcm	0000001c Process::clear()
000056d8 g     F .text.itcm	000000b0 __kernel_sin
00000cec  w    F .text.itcm	00000008 Vector<float>::Vector()
60001ed8 g     F .text.code	0000007c TwoWire::setSDA(unsigned char)
200016c4 g     O .data	00000140 Wire2
6000e800 g     O .text.csf	00000c00 hab_csf
20280000 g       .text.csf	00000000 _heap_end
0000a184 g       .ARM.exidx	00000000 __exidx_start
70000000 g       .bss.extram	00000000 _extram_end
20001dfe g     O .data	00000001 __fdlib_version
20002684 g     O .bss	00000004 EventResponder::firstYield
200006c8 g     O .data	00000004 _global_impure_ptr
0000415c g     F .text.itcm	00000014 Adafruit_LSM6DSOX::Adafruit_LSM6DSOX()
00006810 g     F .text.itcm	000003de _realloc_r
00002d4c g     F .text.itcm	00000032 Adafruit_BusIO_RegisterBits::write(unsigned long)
00005f54 g     F .text.itcm	00000050 __libc_init_array
00003670 g     F .text.itcm	00000044 Adafruit_LIS3MDL::reset()
00003f48 g     F .text.itcm	00000050 Adafruit_LSM6DS::configInt2(bool, bool, bool)
00004284  w    F .text.itcm	0000000c TwoWire::available()
00002a20  w    F .text.itcm	00000004 usb_seremu_class::flush()
200002c0 g     O .data	00000028 __mprec_bigtens
0000454c g     F .text.itcm	00000120 TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)
00001868 g     F .text.itcm	00000030 _sbrk
6000c404 g       *ABS*	00000000 _sdataload
00007a70 g     F .text.itcm	00000042 __mcmp
000038a4  w    F .text.itcm	00000002 Adafruit_LSM6DS_Accelerometer::~Adafruit_LSM6DS_Accelerometer()
20001810 g     O .data	00000004 __brkval
6000204c g     F .text.code	00000000 _init
00002930 g     F .text.itcm	0000000e String::~String()
00003d30 g     F .text.itcm	00000042 Adafruit_LSM6DS::setAccelRange(accel_range)
00000a90 g     F .text.itcm	00000004 GraphNode::config()
0000279c g     F .text.itcm	00000018 usb_seremu_write
00003d74 g     F .text.itcm	0000003a Adafruit_LSM6DS::setGyroDataRate(data_rate)
00000a94 g     F .text.itcm	00000008 GraphNode::print_proc()
600020e4 g     O .text.progmem	00000049 usb_config_descriptor_12
00005058 g     F .text.itcm	0000067c __kernel_rem_pio2
20000564 g     O .data	00000024 vtable for TwoWire
200027e0 g       .bss	00000000 _ebss
000030f8 g     F .text.itcm	00000058 Adafruit_SPIDevice::endTransaction()
000037a8 g     F .text.itcm	000000dc Adafruit_LIS3MDL::readMagneticField(float&, float&, float&)
00002da0 g     F .text.itcm	00000012 Adafruit_I2CDevice::Adafruit_I2CDevice(unsigned char, TwoWire*)
60002010 g     F .text.code	0000003c TwoWire::configSCLpin(unsigned char)
00007740 g     F .text.itcm	00000040 __hi0bits
00003e88 g     F .text.itcm	00000042 Adafruit_LSM6DS::configIntOutputs(bool, bool)
0000472c g     F .text.itcm	0000000c lpi2c3_isr()
20200660 g       .bss.dma	00000000 _heap_start
00000cec  w    F .text.itcm	00000008 Vector<float>::Vector()
60002188 g     O .text.progmem	00000050 TwoWire::i2c4_hardware
000002a8  w    F .text.itcm	00000040 ComplimentaryFilter::reset()
0000296c g     F .text.itcm	00000042 String::copy(char const*, unsigned int)
00004938 g     F .text.itcm	000001dc __ieee754_atan2
00000002 g       *ABS*	00000000 _itcm_block_count
20002760 g     O .bss	00000020 endpoint0_transfer_data
00002a0c g     F .text.itcm	00000004 operator delete(void*, unsigned int)
0000256c g     F .text.itcm	00000030 tx_zero_pad
000006fc g     F .text.itcm	000000ce LSM6DSOX::run(Vector<float>*, Vector<float>*)
00001310 g     F .text.itcm	000002b8 pwm_init
00002db4 g     F .text.itcm	00000038 Adafruit_I2CDevice::detected()
00002930 g     F .text.itcm	0000000e String::~String()
60001b58 g     F .text.code	00000064 usb_pll_start
00007920 g     F .text.itcm	000000a0 __pow5mult
00000a9c g     F .text.itcm	0000001c GraphNode::print_output()
00004738 g     F .text.itcm	0000000c lpi2c4_isr()
000033d0 g     F .text.itcm	00000014 Adafruit_LIS3MDL::Adafruit_LIS3MDL()
00002ee8 g     F .text.itcm	00000048 Adafruit_I2CDevice::read(unsigned char*, unsigned int, bool)
00000000  w      *UND*	00000000 __deregister_frame_info
20002780 g     O .bss	00000020 endpoint0_transfer_ack
0000217c g     F .text.itcm	00000028 usb_transmit
00000454  w    F .text.itcm	00000024 Print::println(char const*)
0000283c g     F .text.itcm	00000020 systick_isr
00003f98 g     F .text.itcm	000000c4 Adafruit_LSM6DS::readAcceleration(float&, float&, float&)
20001434 g     O .data	00000010 Serial
600016ac  w    F .text.code	00000002 startup_early_hook
00000ad8 g     F .text.itcm	0000000e Process::output_dim()
00003c38 g     F .text.itcm	0000002c Adafruit_LSM6DS::Adafruit_LSM6DS()
00004060 g     F .text.itcm	000000cc Adafruit_LSM6DS::readGyroscope(float&, float&, float&)
00002a24  w    F .text.itcm	00000004 usb_seremu_class::availableForWrite()
00002bf0 g     F .text.itcm	0000003e Adafruit_BusIO_Register::write(unsigned long, unsigned char)
00000cf4  w    F .text.itcm	00000010 Vector<float>::~Vector()
00004748 g     F .text.itcm	000000a0 cos
000075c0 g     F .text.itcm	00000000 memchr
00000eb0 g     F .text.itcm	000002c4 set_arm_clock
2000273c g     O .bss	00000004 systick_cycle_count
20001de8 g     O .data	00000016 usb_string_serial_number_default
000073c8 g     F .text.itcm	000001d0 _free_r
00000b04 g     F .text.itcm	0000001c Process::print()
0000412c  w    F .text.itcm	00000014 Adafruit_LSM6DSOX::~Adafruit_LSM6DSOX()
00007254 g     F .text.itcm	000000d8 __call_exitprocs
000033e4 g     F .text.itcm	000000a8 Adafruit_LIS3MDL::read()
20001d88 g     O .data	00000004 __malloc_sbrk_base
0000088c g     F .text.itcm	00000134 LSM6DSOX::LSM6DSOX()
00000cd0  w    F .text.itcm	0000001a Vector<int>::operator[](int)
00000c74  w    F .text.itcm	00000008 Vector<int>::Vector()
0000088c g     F .text.itcm	00000134 LSM6DSOX::LSM6DSOX()
000038a0  w    F .text.itcm	00000002 Adafruit_LSM6DS_Gyro::~Adafruit_LSM6DS_Gyro()
000047e8 g     F .text.itcm	000000a0 sin
2000051c g     O .data	0000001c vtable for Adafruit_LSM6DS_Accelerometer
000079c0 g     F .text.itcm	000000ae __lshift
0000214c g     F .text.itcm	0000002e usb_prepare_transfer
00004888 g     F .text.itcm	00000004 atan2
000022b8 g     F .text.itcm	00000074 usb_rawhid_configure
000016d8 g     F .text.itcm	00000190 unused_interrupt_vector
0000a068 g     F .text.itcm	00000100 __ssprint_r
20002744 g     O .bss	00000004 usb_timer0_callback
60001bbc g     F .text.code	0000011c tempmon_init
00007c84 g     F .text.itcm	0000005e _vasnprintf_r
00002a10  w    F .text.itcm	00000002 serialEvent()
000071b0 g     F .text.itcm	000000a4 __register_exitproc
000023e8 g     F .text.itcm	000000b4 usb_seremu_configure
00000098  w    F .text.itcm	000001ac ComplimentaryFilter::run(Vector<float>*, Vector<float>*)
000077f0 g     F .text.itcm	00000130 __multiply
00000025 g       *ABS*	00000000 _teensy_model_identifier
0000709c g     F .text.itcm	00000066 strncpy
200026b4 g     O .bss	00000028 __malloc_current_mallinfo
0000249c g     F .text.itcm	00000068 usb_seremu_getchar
00007bc8 g     F .text.itcm	000000ba __d2b
20002694 g     O .bss	00000020 HardwareSerial::s_serials_with_serial_events
60001dc4 g     F .text.code	00000054 _reboot_Teensyduino_
00004170 g     F .text.itcm	000000b4 Adafruit_LSM6DSOX::_init(long)
600016b0 g     F .text.code	00000002 startup_default_middle_hook
00006800 g     F .text.itcm	00000010 realloc
00000a28 g     F .text.itcm	00000026 GraphNode::setup_proc()
00001a68 g     F .text.itcm	00000618 usb_isr
00005f1c g     F .text.itcm	0000000c __cxa_atexit
00000cf4  w    F .text.itcm	00000010 Vector<float>::~Vector()
00003df0 g     F .text.itcm	00000098 Adafruit_LSM6DS::_init(long)
00000d60  w    F .text.itcm	0000001c Vector<float>::from_array(float*, int)
000006cc g     F .text.itcm	00000006 LSM6DSOX::setup(Vector<float>*)
000029b0 g     F .text.itcm	00000026 String::String(char const*)
20002738 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
000033d0 g     F .text.itcm	00000014 Adafruit_LIS3MDL::Adafruit_LIS3MDL()
00005f18  w    F .text.itcm	00000002 .hidden __aeabi_ldiv0
00002504 g     F .text.itcm	00000044 usb_seremu_peekchar
000038a8  w    F .text.itcm	00000002 Adafruit_LSM6DS_Temp::~Adafruit_LSM6DS_Temp()
00000630 g     F .text.itcm	00000054 nd_norm(float*, int)
20001980 g     O .data	00000408 __malloc_av_
20000588 g     O .data	0000002c vtable for LSM6DSOX
000067f8 g     F .text.itcm	00000002 __malloc_lock
00003cf0 g     F .text.itcm	0000003e Adafruit_LSM6DS::setAccelDataRate(data_rate)
20002000 g     O .data	000002c0 _VectorsRam
00007ce4 g     F .text.itcm	0000005e _calloc_r
000029d8 g     F .text.itcm	0000002c String::equals(char const*) const
20001dff g     O .data	00000001 yield_active_check_flags
2000275d g     O .bss	00000001 usb_high_speed
00000684 g     F .text.itcm	00000022 weighted_vector_addition(float*, float*, float, float, int, float*)
00000be0 g     F .text.itcm	0000002c FTYK::micros(int)
0000675c g     F .text.itcm	0000009a memset
2000047c  w    O .data	00000024 vtable for usb_seremu_class
00000478 g     F .text.itcm	000001b4 main
000007cc g     F .text.itcm	000000c0 LSM6DSOX::print()
200026e0 g     O .bss	00000004 __malloc_max_total_mem
00003370  w    F .text.itcm	00000002 Adafruit_LIS3MDL::~Adafruit_LIS3MDL()
20200000 g     O .bss.dma	00000049 usb_descriptor_buffer
000038a4  w    F .text.itcm	00000002 Adafruit_LSM6DS_Accelerometer::~Adafruit_LSM6DS_Accelerometer()
00000d7c  w    F .text.itcm	00000044 Vector<float>::push(float)
00003ba8 g     F .text.itcm	00000048 Adafruit_LSM6DS_Accelerometer::getSensor(sensor_t*)
00005ab8 g     F .text.itcm	00000004 matherr
000021cc g     F .text.itcm	00000058 usb_init_serialnumber
00003db0 g     F .text.itcm	00000040 Adafruit_LSM6DS::setGyroRange(gyro_range)
600020a0 g       .text.code	00000000 __init_array_end
00007e70 g     F .text.itcm	00000c84 _dtoa_r
00005fc4 g     F .text.itcm	00000570 _malloc_r
2000274f g     O .bss	00000001 HardwareSerial::s_count_serials_with_serial_events
00007168 g     F .text.itcm	0000001a __ascii_wctomb
00002da0 g     F .text.itcm	00000012 Adafruit_I2CDevice::Adafruit_I2CDevice(unsigned char, TwoWire*)
200005b4  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
0000412c  w    F .text.itcm	00000014 Adafruit_LSM6DSOX::~Adafruit_LSM6DSOX()
0000427c g     F .text.itcm	00000008 SPIClass::transfer(void const*, void*, unsigned int)
00002d20 g     F .text.itcm	0000000e Adafruit_BusIO_RegisterBits::Adafruit_BusIO_RegisterBits(Adafruit_BusIO_Register*, unsigned char, unsigned char)
0000732c g     F .text.itcm	0000009c _malloc_trim_r
600020e0 g     O .text.progmem	00000004 string0
00000bd0 g     F .text.itcm	00000010 FTYK::set(int)
00003c38 g     F .text.itcm	0000002c Adafruit_LSM6DS::Adafruit_LSM6DS()
600016b4  w    F .text.code	00000002 startup_late_hook
00000ac8 g     F .text.itcm	0000000e Process::context_dim()
00000a50 g     F .text.itcm	0000003c GraphNode::run_proc(Vector<float>*)
00006c28 g     F .text.itcm	000002dc strcmp
60002186 g     O .text.progmem	00000001 _serialEvent_default
000035c4 g     F .text.itcm	00000038 Adafruit_LIS3MDL::setOperationMode(lis3mdl_operationmode_t)
00003884 g     F .text.itcm	0000001c Adafruit_LSM6DS::~Adafruit_LSM6DS()
20000000 g     O .data	00000280 endpoint_queue_head
20000538 g     O .data	0000002c vtable for Process
600020a0  w    O .text.progmem	00000026 usb_string_product_name
00002e0c g     F .text.itcm	00000068 Adafruit_I2CDevice::write(unsigned char const*, unsigned int, bool, unsigned char const*, unsigned int)
00000b88 g     F .text.itcm	00000028 Process::run(Vector<float>*, Vector<float>*)
00005bdc g     F .text.itcm	0000001a copysign
00001174 g     F .text.itcm	000000cc delay
00003750 g     F .text.itcm	00000058 Adafruit_LIS3MDL::configInterrupt(bool, bool, bool, bool, bool, bool)
0000a180 g     F .fini	00000000 _fini
000003b8  w    F .text.itcm	0000009c ComplimentaryFilter::print()
000042ac g     F .text.itcm	00000030 TwoWire::write(unsigned char)
60001020 g     O .text.headers	0000000c BootData
00005788 g     F .text.itcm	00000204 atan
000028ec g     F .text.itcm	0000001e Print::printf(char const*, ...)
0000189c g     F .text.itcm	00000004 Panic_Temp_isr
00000dc8  w    F .text.itcm	00000054 Vector<float>::append(Vector<float>*)
00007184 g     F .text.itcm	0000002c _write_r
00002a1c  w    F .text.itcm	00000004 usb_seremu_class::available()
000029b0 g     F .text.itcm	00000026 String::String(char const*)
20001d90 g     O .data	00000004 _impure_ptr
00005ac0 g     F .text.itcm	0000011c scalbn
20001444 g     O .data	00000140 Wire
0000285c g     F .text.itcm	0000005c IntervalTimer::end()
60002098 g       .text.code	00000000 __preinit_array_end
00006534 g     F .text.itcm	0000002a __ascii_mbtowc
00004290  w    F .text.itcm	00000018 TwoWire::peek()
000042a8  w    F .text.itcm	00000002 TwoWire::flush()
20000f50 g     O .data	0000009c usb_descriptor_list
00000d04  w    F .text.itcm	0000000c Vector<float>::clear()
0000415c g     F .text.itcm	00000014 Adafruit_LSM6DSOX::Adafruit_LSM6DSOX()
00004db4 g     F .text.itcm	00000184 __ieee754_sqrt
20070000 g       .text.csf	00000000 _estack
60001f8c g     F .text.code	00000084 TwoWire::setSCL(unsigned char)
20000448 g     O .data	00000018 vtable for Adafruit_LSM6DS
000042dc g     F .text.itcm	0000003a TwoWire::write(unsigned char const*, unsigned int)
000028dc  w    F .text.itcm	0000000e _write
00000b60 g     F .text.itcm	00000028 Process::context(Vector<float>*)
200022c0 g       .data	00000000 _edata
20002752 g     O .bss	00000001 external_psram_size
00000c74  w    F .text.itcm	00000008 Vector<int>::Vector()
000036b4 g     F .text.itcm	0000005c Adafruit_LIS3MDL::_init()
00004720 g     F .text.itcm	0000000c lpi2c1_isr()
00003b5c g     F .text.itcm	0000004c Adafruit_LSM6DS_Gyro::getSensor(sensor_t*)
000012c0 g     F .text.itcm	0000004e ultoa
00000cb4  w    F .text.itcm	0000001c Vector<int>::from_array(int*, int)
60001e18 g     F .text.code	000000c0 TwoWire::begin()
0000336c  w    F .text.itcm	00000002 Adafruit_Sensor::enableAutoRange(bool)
000006d4 g     F .text.itcm	00000028 LSM6DSOX::context(Vector<float>*)
00002a04 g     F .text.itcm	00000004 operator new(unsigned int)
000027f4 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
20001d8c g     O .data	00000004 __malloc_trim_threshold
00005f34 g     F .text.itcm	00000020 exit
00002d20 g     F .text.itcm	0000000e Adafruit_BusIO_RegisterBits::Adafruit_BusIO_RegisterBits(Adafruit_BusIO_Register*, unsigned char, unsigned char)
00007ab4 g     F .text.itcm	00000114 __mdiff
00004140  w    F .text.itcm	0000001c Adafruit_LSM6DSOX::~Adafruit_LSM6DSOX()
200004b8  w    O .data	0000002c vtable for ComplimentaryFilter
00003bf0 g     F .text.itcm	00000048 Adafruit_LSM6DS_Temp::getSensor(sensor_t*)
200005c4 g     O .data	00000101 _ctype_
60002098 g       .text.code	00000000 __init_array_start
00005f18  w    F .text.itcm	00000002 .hidden __aeabi_idiv0
0000007c  w    F .text.itcm	0000001c ComplimentaryFilter::clear()
2000142c g     O .data	00000004 F_BUS_ACTUAL
000009c0 g     F .text.itcm	00000068 GraphNode::GraphNode(Process*, int, int, int*)
00001898  w    F .text.itcm	00000004 _exit
00000000 g       .text.itcm	00000000 _stext
2000180c g     O .data	00000004 IntervalTimer::nvic_priorites
00006fc0 g     F .text.itcm	000000dc strlen
00000c0c g     F .text.itcm	00000068 Vector<float>::print()
2000275f g     O .bss	00000001 usb_seremu_online
0000290c  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
600020a0 g     O .text.progmem	00000026 usb_string_product_name_default
00007150 g     F .text.itcm	00000018 vdprintf
600016b0  w    F .text.code	00000002 startup_middle_hook
600016b8 g     F .text.code	000000e4 configure_cache
00002b54 g     F .text.itcm	0000009c Adafruit_BusIO_Register::write(unsigned char*, unsigned char)
00000000  w      *UND*	00000000 _Jv_RegisterClasses
00002ccc g     F .text.itcm	00000052 Adafruit_BusIO_Register::read()
60002098 g       .text.code	00000000 __preinit_array_start
000021a4 g     F .text.itcm	00000024 usb_receive
00003150 g     F .text.itcm	00000120 Adafruit_SPIDevice::beginTransactionWithAssertingCS()
200004e4 g     O .data	0000001c vtable for Adafruit_LSM6DS_Gyro
00007780 g     F .text.itcm	0000005a __lo0bits
0000259c g     F .text.itcm	00000068 tx_queue_transfer
0000f400 g       *ABS*	00000000 _flashimagelen
000039b8 g     F .text.itcm	000001a4 Adafruit_LSM6DS::_read()
00005bf8 g     F .text.itcm	0000000a __aeabi_atexit
00000000  w      *UND*	00000000 __register_frame_info
000015c8 g     F .text.itcm	00000030 rtc_get
000038e0  w    F .text.itcm	0000000e Adafruit_LSM6DS_Accelerometer::~Adafruit_LSM6DS_Accelerometer()
00003370  w    F .text.itcm	00000002 Adafruit_LIS3MDL::~Adafruit_LIS3MDL()
70000000 g       .bss.extram	00000000 _extram_start
00002838 g     F .text.itcm	00000004 pendablesrvreq_isr
00003978 g     F .text.itcm	00000040 Adafruit_LSM6DS_Accelerometer::getEvent(sensors_event_t*)
00003900 g     F .text.itcm	00000038 Adafruit_LSM6DS_Temp::getEvent(sensors_event_t*)
000028b8  w    F .text.itcm	00000004 Print::availableForWrite()
00000d10  w    F .text.itcm	00000022 Vector<float>::Vector(int)
20001814 g     O .data	0000016c __global_locale
000006c4 g     F .text.itcm	00000006 LSM6DSOX::clear()
00002f64 g     F .text.itcm	00000194 Adafruit_SPIDevice::transfer(unsigned char*, unsigned int)
000020e4 g     F .text.itcm	00000068 usb_config_tx
00005fb4 g     F .text.itcm	00000010 free
000076c0 g     F .text.itcm	00000080 __multadd
000076ac g     F .text.itcm	00000012 _Bfree
00003c64 g     F .text.itcm	00000042 Adafruit_LSM6DS::begin_I2C(unsigned char, TwoWire*, long)
20001de8  w    O .data	00000016 usb_string_serial_number
00003884 g     F .text.itcm	0000001c Adafruit_LSM6DS::~Adafruit_LSM6DS()


