
/Users/mitchellscott/Desktop/rufous/src/firmware/build/examples/hid_packet/main.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60001e74 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
00006700 l    d  .fini	00000000 .fini
00006704 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
200016c0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
60009d28 l    d  .text.csf	00000000 .text.csf
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000016 memory_copy
60001418 l     F .text.code	00000010 memory_clear
00000000 l    df *ABS*	00000000 analog.c
20001bf9 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 tempmon.c
20001bac l     O .bss	00000004 s_hotTemp
20001bb0 l     O .bss	00000004 s_hot_ROOM
20001bb4 l     O .bss	00000004 s_roomC_hotC
20001ba8 l     O .bss	00000004 s_hotCount
00000000 l    df *ABS*	00000000 usb.c
00001228 l     F .text.itcm	00000090 schedule_transfer
000012b8 l     F .text.itcm	00000036 run_callbacks
000012f0 l     F .text.itcm	000000a0 endpoint0_transmit.constprop.1
20001af4 l     O .bss	00000004 endpointN_notify_mask
20001bff l     O .bss	00000001 sof_usage
20001af0 l     O .bss	00000004 endpoint0_notify_mask
20001c06 l     O .bss	00000001 usb_reboot_timer
20001a60 l     O .bss	00000008 endpoint0_setupdata
20001b78 l     O .bss	00000008 reply_buffer
20001ae8 l     O .bss	00000008 endpoint0_buffer
00000000 l    df *ABS*	00000000 /Users/mitchellscott/Library/Arduino15/packages/teensy/tools/teensy-compile/5.4.1/arm/bin/../lib/gcc/arm-none-eabi/5.4.1/armv7e-m/fpu/fpv5-d16/crti.o
00000000 l    df *ABS*	00000000 /Users/mitchellscott/Library/Arduino15/packages/teensy/tools/teensy-compile/5.4.1/arm/bin/../lib/gcc/arm-none-eabi/5.4.1/armv7e-m/fpu/fpv5-d16/crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 __do_global_dtors_aux
20001a68 l       .bss	00000000 completed.8605
00000044 l     F .text.itcm	00000000 frame_dummy
20001a6c l       .bss	00000000 object.8610
60001e68 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 main.cpp
0000007c l     F .text.itcm	0000003c int assert_eq<int>(int, int, String) [clone .part.1] [clone .constprop.6]
00000654 l     F .text.itcm	00000024 _GLOBAL__sub_I__Z14assert_not_nanf
00000000 l    df *ABS*	00000000 Tone.cpp
0000223c l     F .text.itcm	00000018 _GLOBAL__sub_I__Z4tonehtm
20000c3c l     O .data	00000008 tone_timer
00000000 l    df *ABS*	00000000 usb_desc.c
60001f50 l     O .text.progmem	0000000a qualifier_descriptor
200011fc l     O .data	00000021 seremu_report_desc
200011e0 l     O .data	0000001c rawhid_report_desc
200011cc l     O .data	00000012 device_descriptor
00000000 l    df *ABS*	00000000 serialEvent.cpp
00000000 l    df *ABS*	00000000 hid_report.cpp
00000000 l    df *ABS*	00000000 timing.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 usb_rawhid.c
00001b4c l     F .text.itcm	00000034 rx_event
00001b80 l     F .text.itcm	00000060 rx_queue_transfer
20001c01 l     O .bss	00000001 tx_head
200016e0 l     O .bss	00000080 rx_transfer
20001bfd l     O .bss	00000001 rx_tail
20001b94 l     O .bss	00000005 rx_list
20200060 l     O .bss.dma	00000100 rx_buffer
20200160 l     O .bss.dma	00000100 txbuffer
20001bfb l     O .bss	00000001 rx_head
20001860 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 usb_seremu.c
00001c54 l     F .text.itcm	00000064 rx_queue_transfer
00001cb8 l     F .text.itcm	00000058 rx_event
00001f2c l     F .text.itcm	0000002c usb_seremu_flush_callback
00001f58 l     F .text.itcm	00000140 usb_seremu_write.part.1
20001bfe l     O .bss	00000001 rx_tail
20001c03 l     O .bss	00000001 tx_noautoflush
20001c02 l     O .bss	00000001 tx_head
20001760 l     O .bss	00000100 rx_transfer
20001b84 l     O .bss	00000010 rx_index
20001b9c l     O .bss	00000009 rx_list
20200260 l     O .bss.dma	00000100 rx_buffer
20200360 l     O .bss.dma	00000300 txbuffer
20001bf4 l     O .bss	00000002 tx_available
20001b80 l     O .bss	00000004 rx_available
20001bfc l     O .bss	00000001 rx_head
20001c00 l     O .bss	00000001 transmit_previous_timeout
200018e0 l     O .bss	00000180 tx_transfer
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 IntervalTimer.cpp
200016c0 l     O .bss	00000010 funct_table
00000000 l    df *ABS*	00000000 Print.cpp
00000000 l    df *ABS*	00000000 WString.cpp
0000231c l     F .text.itcm	0000001a String::operator=(char const*) [clone .part.2]
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 yield.cpp
20001bf8 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 atexit_arm.cc
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 cxa_atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 itoa.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 lib_a-memcpy.o
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 realloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 utoa.c
00000000 l    df *ABS*	00000000 vdprintf.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lib_a-memchr.o
00000000 l    df *ABS*	00000000 mprec.c
200004b0 l     O .data	0000000c p05.6087
00000000 l    df *ABS*	00000000 vasnprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 dtoa.c
000042c4 l     F .text.itcm	00000128 quorem
00000000 l    df *ABS*	00000000 vfprintf.c
200007e4 l     O .data	00000010 zeroes.7258
200004a0 l     O .data	00000010 blanks.7257
00000000 l    df *ABS*	00000000 vfprintf.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 impure.c
200007f8 l     O .data	00000428 impure_data
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 
00000000 l       *UND*	00000000 __fini_array_end
00000000 l       *UND*	00000000 __bss_start__
6000ac00 l       .text.csf	00000000 __text_csf_end
00000000 l       *UND*	00000000 __bss_end__
00000000 l       *UND*	00000000 software_init_hook
00000000 l       *UND*	00000000 __fini_array_start
00000000 l       *UND*	00000000 hardware_init_hook
00000000 l       *UND*	00000000 __libc_fini
00000000 l       *UND*	00000000 __stack
60001e28 l     F .text.code	00000008 __main_veneer
60001e30 l     F .text.code	00000008 __sm_set_pool_veneer
60001e38 l     F .text.code	00000008 __set_arm_clock_veneer
60001e40 l     F .text.code	00000008 __delay_veneer
60001e48 l     F .text.code	00000008 ____libc_init_array_veneer
60001e50 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60001e58 l     F .text.code	00000008 __memset_veneer
60001e60 l     F .text.code	00000008 __pwm_init_veneer
000066e8 l     F .text.itcm	00000008 ___init_veneer
000066f0 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
00003544 g     F .text.itcm	000000ba strcpy
00002338 g     F .text.itcm	00000026 String::String(int, unsigned char)
00002230  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
00001e70 g     F .text.itcm	00000024 usb_seremu_available
600016b4 g     F .text.code	00000002 startup_default_late_hook
00002424  w    F .text.itcm	000000f0 yield
20001bf0 g     O .bss	00000004 usb_timer1_callback
00000784 g     F .text.itcm	00000020 HidReport::put_float(int, float)
60001e9c g     O .text.progmem	00000018 usb_string_manufacturer_name_default
6000179c g     F .text.code	000003bc configure_external_ram
00002400  w    F .text.itcm	00000004 usb_seremu_class::peek()
000021e0 g     F .text.itcm	00000020 Print::println()
00000818 g     F .text.itcm	00000044 FTYK::mark(int)
0000312c g     F .text.itcm	00000002 __malloc_unlock
60001654 g     F .text.code	00000058 analog_init
0000375c g     F .text.itcm	0000004a _vdprintf_r
20000c28 g     O .data	00000004 F_CPU_ACTUAL
00002fc4 g     F .text.itcm	000000c6 memmove
000007e4 g     F .text.itcm	00000020 FTYK::FTYK()
00003be0 g     F .text.itcm	0000004c _Balloc
20001bc4 g     O .bss	00000028 timer
0000670c g       .ARM.exidx	00000000 __exidx_end
20001bf6 g     O .bss	00000001 EventResponder::runningFromYield
000011c8 g     F .text.itcm	00000060 tempmonGetTemp
00002844 g     F .text.itcm	0000000c __errno
60001000 g     O .text.headers	00000020 ImageVectorTable
00002404  w    F .text.itcm	00000004 usb_seremu_class::read()
000000dc g     F .text.itcm	00000084 packet_put_test()
20001a8c g     O .bss	00000004 EventResponder::firstInterrupt
00001af0 g     F .text.itcm	00000004 usb_transfer_status
00000f74 g     F .text.itcm	00000090 sm_set_pool
000003a0 g     F .text.itcm	00000088 packet_puts_gets_test()
000022fc g     F .text.itcm	0000001e String::String(String const&)
000020e0 g     F .text.itcm	0000003c usb_seremu_flush_output
00002098 g     F .text.itcm	0000002c usb_seremu_putchar
20001c74 g     O .bss	00000004 errno
00006708 g       .text.itcm	00000000 _etext
200016c0 g       .bss	00000000 _sbss
000020dc g     F .text.itcm	00000004 usb_seremu_write_buffer_free
60001f5c g       *ABS*	00000000 _stextload
000007c4 g     F .text.itcm	0000001e HidReport::rputs(unsigned char*, int, int)
000019a8 g     F .text.itcm	00000064 usb_config_rx
00002414  w    F .text.itcm	00000008 usb_seremu_class::write(unsigned char const*, unsigned int)
000007e4 g     F .text.itcm	00000020 FTYK::FTYK()
20001a88 g     O .bss	00000004 EventResponder::lastInterrupt
00002e90 g     F .text.itcm	00000134 memcpy
00005078 g     F .text.itcm	00001570 _svfprintf_r
20001bc0 g     O .bss	00000004 systick_millis_count
00002520 g     F .text.itcm	00000000 .hidden __aeabi_uldivmod
20001c04 g     O .bss	00000001 usb_configuration
00000f24 g     F .text.itcm	00000050 sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
60001e9c  w    O .text.progmem	00000018 usb_string_manufacturer_name
000028d4 g     F .text.itcm	00000010 malloc
200002a8 g     O .data	000000c8 __mprec_tens
60001cd8 g     F .text.code	000000ec usb_init
00002338 g     F .text.itcm	00000026 String::String(int, unsigned char)
20001ae4 g     O .bss	00000004 __malloc_top_pad
000004f4 g     F .text.itcm	000000e8 packet_float_test()
20001c60 g     O .bss	00000004 systick_safe_read
aaaaaaab g       *ABS*	00000000 _flexram_bank_config
20000c20 g     O .data	00000000 .hidden __dso_handle
000028d0 g     F .text.itcm	00000004 itoa
00003b18 g     F .text.itcm	0000001c _localeconv_r
00003d5c g     F .text.itcm	00000012 __i2b
20000000 g       .data	00000000 _sdata
0000241c  w    F .text.itcm	00000006 usb_seremu_class::write(unsigned char)
60001f04 g     O .text.progmem	00000049 usb_config_descriptor_480
00002550 g     F .text.itcm	000002e2 .hidden __udivmoddi4
00002264 g     F .text.itcm	0000002a String::reserve(unsigned int)
00003520 g     F .text.itcm	00000024 _sbrk_r
600016ac g     F .text.code	00000002 startup_default_early_hook
60001428 g     F .text.code	0000022c ResetHandler
20001a90 g     O .bss	00000004 EventResponder::lastYield
20001c64 g     O .bss	00000010 extmem_smalloc_pool
20001adc g     O .bss	00000004 __malloc_max_sbrked_mem
6000a000 g     O .text.csf	00000c00 hab_csf
20280000 g       .text.csf	00000000 _heap_end
00006704 g       .ARM.exidx	00000000 __exidx_start
70000000 g       .bss.extram	00000000 _extram_end
20001a84 g     O .bss	00000004 EventResponder::firstYield
2000049c g     O .data	00000004 _global_impure_ptr
00003140 g     F .text.itcm	000003de _realloc_r
00002850 g     F .text.itcm	00000050 __libc_init_array
0000240c  w    F .text.itcm	00000004 usb_seremu_class::flush()
20000280 g     O .data	00000028 __mprec_bigtens
00001194 g     F .text.itcm	00000030 _sbrk
60008668 g       *ABS*	00000000 _sdataload
00003ff0 g     F .text.itcm	00000042 __mcmp
20000c48 g     O .data	00000004 __brkval
60001e18 g     F .text.code	00000000 _init
00002254 g     F .text.itcm	0000000e String::~String()
000022fc g     F .text.itcm	0000001e String::String(String const&)
000020c4 g     F .text.itcm	00000018 usb_seremu_write
00000160 g     F .text.itcm	00000094 packet_get_test()
000023d0 g     F .text.itcm	00000010 operator+(StringSumHelper const&, String const&)
60001eb8 g     O .text.progmem	00000049 usb_config_descriptor_12
20001ca0 g       .bss	00000000 _ebss
0000070c g     F .text.itcm	00000014 HidReport::HidReport()
00002360 g     F .text.itcm	00000070 String::append(char const*, unsigned int)
00003cc0 g     F .text.itcm	00000040 __hi0bits
20200660 g       .bss.dma	00000000 _heap_start
00002290 g     F .text.itcm	00000042 String::copy(char const*, unsigned int)
00000001 g       *ABS*	00000000 _itcm_block_count
20001c20 g     O .bss	00000020 endpoint0_transfer_data
00001e94 g     F .text.itcm	00000030 tx_zero_pad
00000c3c g     F .text.itcm	000002b8 pwm_init
00002254 g     F .text.itcm	0000000e String::~String()
60001b58 g     F .text.code	00000064 usb_pll_start
00003ea0 g     F .text.itcm	000000a0 __pow5mult
00000000  w      *UND*	00000000 __deregister_frame_info
20001c40 g     O .bss	00000020 endpoint0_transfer_ack
00001aa4 g     F .text.itcm	00000028 usb_transmit
000000b8  w    F .text.itcm	00000024 Print::println(char const*)
00002164 g     F .text.itcm	00000020 systick_isr
000028a0 g     F .text.itcm	0000002e __itoa
20000c2c g     O .data	00000010 Serial
600016ac  w    F .text.code	00000002 startup_early_hook
00002410  w    F .text.itcm	00000004 usb_seremu_class::availableForWrite()
00003b40 g     F .text.itcm	00000000 memchr
20001b38 g     O .bss	00000040 outgoing_report
0000085c g     F .text.itcm	000002c4 set_arm_clock
20001bbc g     O .bss	00000004 systick_cycle_count
20001220 g     O .data	00000016 usb_string_serial_number_default
00003948 g     F .text.itcm	000001d0 _free_r
200011c0 g     O .data	00000004 __malloc_sbrk_base
00003f40 g     F .text.itcm	000000ae __lshift
00001a74 g     F .text.itcm	0000002e usb_prepare_transfer
00001be0 g     F .text.itcm	00000074 usb_rawhid_configure
00001004 g     F .text.itcm	00000190 unused_interrupt_vector
000065e8 g     F .text.itcm	00000100 __ssprint_r
20001bec g     O .bss	00000004 usb_timer0_callback
60001bbc g     F .text.code	0000011c tempmon_init
00004204 g     F .text.itcm	0000005e _vasnprintf_r
000023fc  w    F .text.itcm	00000002 serialEvent()
00003808 g     F .text.itcm	000000a4 __register_exitproc
00001d10 g     F .text.itcm	000000b4 usb_seremu_configure
000002e8  w    F .text.itcm	000000b8 int assert_eq<unsigned char>(unsigned char*, unsigned char*, String, int)
000023e0 g     F .text.itcm	0000001c operator+(StringSumHelper const&, char const*)
00003d70 g     F .text.itcm	00000130 __multiply
00000025 g       *ABS*	00000000 _teensy_model_identifier
20001ab4 g     O .bss	00000028 __malloc_current_mallinfo
00001dc4 g     F .text.itcm	00000068 usb_seremu_getchar
00004148 g     F .text.itcm	000000ba __d2b
20001a94 g     O .bss	00000020 HardwareSerial::s_serials_with_serial_events
60001dc4 g     F .text.code	00000054 _reboot_Teensyduino_
600016b0 g     F .text.code	00000002 startup_default_middle_hook
00003130 g     F .text.itcm	00000010 realloc
00001390 g     F .text.itcm	00000618 usb_isr
00002838 g     F .text.itcm	0000000c __cxa_atexit
20001af8 g     O .bss	00000040 incoming_report
000022d4 g     F .text.itcm	00000026 String::String(char const*)
20001bb8 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
00002834  w    F .text.itcm	00000002 .hidden __aeabi_ldiv0
00001e2c g     F .text.itcm	00000044 usb_seremu_peekchar
20000db8 g     O .data	00000408 __malloc_av_
00003128 g     F .text.itcm	00000002 __malloc_lock
20001400 g     O .data	000002c0 _VectorsRam
00004264 g     F .text.itcm	0000005e _calloc_r
000036dc g     F .text.itcm	00000080 __utoa
20001236 g     O .data	00000001 yield_active_check_flags
20001c05 g     O .bss	00000001 usb_high_speed
0000308c g     F .text.itcm	0000009a memset
20000374  w    O .data	00000024 vtable for usb_seremu_class
00000600 g     F .text.itcm	00000054 main
20001ae0 g     O .bss	00000004 __malloc_max_total_mem
20200000 g     O .bss.dma	00000049 usb_descriptor_buffer
00000428  w    F .text.itcm	000000cc int assert_eq<float>(float*, float, String, int)
00001af4 g     F .text.itcm	00000058 usb_init_serialnumber
60001e74 g       .text.code	00000000 __init_array_end
000043f0 g     F .text.itcm	00000c84 _dtoa_r
000028f4 g     F .text.itcm	00000570 _malloc_r
20001bf7 g     O .bss	00000001 HardwareSerial::s_count_serials_with_serial_events
000037c0 g     F .text.itcm	0000001a __ascii_wctomb
000038ac g     F .text.itcm	0000009c _malloc_trim_r
60001eb4 g     O .text.progmem	00000004 string0
00000804 g     F .text.itcm	00000010 FTYK::set(int)
600016b4  w    F .text.code	00000002 startup_late_hook
60001f5a g     O .text.progmem	00000001 _serialEvent_default
20000000 g     O .data	00000280 endpoint_queue_head
60001e74  w    O .text.progmem	00000026 usb_string_product_name
00000b20 g     F .text.itcm	000000cc delay
000001f4 g     F .text.itcm	000000f4 packet_int32_test()
00006700 g     F .fini	00000000 _fini
60001020 g     O .text.headers	0000000c BootData
00002210 g     F .text.itcm	0000001e Print::printf(char const*, ...)
000011c4 g     F .text.itcm	00000004 Panic_Temp_isr
000037dc g     F .text.itcm	0000002c _write_r
00002408  w    F .text.itcm	00000004 usb_seremu_class::available()
000022d4 g     F .text.itcm	00000026 String::String(char const*)
200011c8 g     O .data	00000004 _impure_ptr
000007a4 g     F .text.itcm	0000001e HidReport::rgets(unsigned char*, int, int)
00002184 g     F .text.itcm	0000005c IntervalTimer::end()
60001e68 g       .text.code	00000000 __preinit_array_end
00002e64 g     F .text.itcm	0000002a __ascii_mbtowc
20000748 g     O .data	0000009c usb_descriptor_list
20078000 g       .text.csf	00000000 _estack
00000720 g     F .text.itcm	00000004 HidReport::get(int)
00002200  w    F .text.itcm	0000000e _write
200016c0 g       .data	00000000 _edata
20001bfa g     O .bss	00000001 external_psram_size
00000bec g     F .text.itcm	0000004e ultoa
0000211c g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
200011c4 g     O .data	00000004 __malloc_trim_threshold
00000724 g     F .text.itcm	00000004 HidReport::put(int, unsigned char)
00000748 g     F .text.itcm	00000016 HidReport::put_int32(int, long)
00004034 g     F .text.itcm	00000114 __mdiff
20000398 g     O .data	00000101 _ctype_
60001e68 g       .text.code	00000000 __init_array_start
00002834  w    F .text.itcm	00000002 .hidden __aeabi_idiv0
20000c24 g     O .data	00000004 F_BUS_ACTUAL
00000000 g       .text.itcm	00000000 _stext
20000c44 g     O .data	00000004 IntervalTimer::nvic_priorites
00003600 g     F .text.itcm	000000dc strlen
20001c07 g     O .bss	00000001 usb_seremu_online
00002230  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
60001e74 g     O .text.progmem	00000026 usb_string_product_name_default
000037a8 g     F .text.itcm	00000018 vdprintf
0000070c g     F .text.itcm	00000014 HidReport::HidReport()
600016b0  w    F .text.code	00000002 startup_middle_hook
600016b8 g     F .text.code	000000e4 configure_cache
000005dc g     F .text.itcm	00000022 run_hid_report_tests()
00000000  w      *UND*	00000000 _Jv_RegisterClasses
60001e68 g       .text.code	00000000 __preinit_array_start
00001acc g     F .text.itcm	00000024 usb_receive
00000728 g     F .text.itcm	0000001e HidReport::get_int32(int)
00003d00 g     F .text.itcm	0000005a __lo0bits
00001ec4 g     F .text.itcm	00000068 tx_queue_transfer
0000ac00 g       *ABS*	00000000 _flashimagelen
00002514 g     F .text.itcm	0000000a __aeabi_atexit
00000000  w      *UND*	00000000 __register_frame_info
00000ef4 g     F .text.itcm	00000030 rtc_get
00000678 g     F .text.itcm	00000094 HidReport::print()
70000000 g       .bss.extram	00000000 _extram_start
00002160 g     F .text.itcm	00000004 pendablesrvreq_isr
20000c4c g     O .data	0000016c __global_locale
00001a0c g     F .text.itcm	00000068 usb_config_tx
000028e4 g     F .text.itcm	00000010 free
00000760 g     F .text.itcm	00000022 HidReport::get_float(int)
00003c40 g     F .text.itcm	00000080 __multadd
00003c2c g     F .text.itcm	00000012 _Bfree
20001220  w    O .data	00000016 usb_string_serial_number


