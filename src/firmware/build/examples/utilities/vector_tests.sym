
/Users/mitchellscott/Desktop/rufous/src/firmware/build/examples/utilities/vector_tests.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60001e70 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
00006d80 l    d  .fini	00000000 .fini
00006d84 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
20001ac0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
6000a7a4 l    d  .text.csf	00000000 .text.csf
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000016 memory_copy
60001418 l     F .text.code	00000010 memory_clear
00000000 l    df *ABS*	00000000 analog.c
20001f56 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 tempmon.c
20001f30 l     O .bss	00000004 s_hotTemp
20001f34 l     O .bss	00000004 s_hot_ROOM
20001f38 l     O .bss	00000004 s_roomC_hotC
20001f2c l     O .bss	00000004 s_hotCount
00000000 l    df *ABS*	00000000 usb.c
000016bc l     F .text.itcm	00000090 schedule_transfer
0000174c l     F .text.itcm	00000036 run_callbacks
00001784 l     F .text.itcm	000000a0 endpoint0_transmit.constprop.1
20001ef8 l     O .bss	00000004 endpointN_notify_mask
20001f5c l     O .bss	00000001 sof_usage
20001ef4 l     O .bss	00000004 endpoint0_notify_mask
20001f63 l     O .bss	00000001 usb_reboot_timer
20001e60 l     O .bss	00000008 endpoint0_setupdata
20001efc l     O .bss	00000008 reply_buffer
20001eec l     O .bss	00000008 endpoint0_buffer
00000000 l    df *ABS*	00000000 /Users/mitchellscott/Library/Arduino15/packages/teensy/tools/teensy-compile/5.4.1/arm/bin/../lib/gcc/arm-none-eabi/5.4.1/armv7e-m/fpu/fpv5-d16/crti.o
00000000 l    df *ABS*	00000000 /Users/mitchellscott/Library/Arduino15/packages/teensy/tools/teensy-compile/5.4.1/arm/bin/../lib/gcc/arm-none-eabi/5.4.1/armv7e-m/fpu/fpv5-d16/crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 __do_global_dtors_aux
20001e68 l       .bss	00000000 completed.8605
00000044 l     F .text.itcm	00000000 frame_dummy
20001e6c l       .bss	00000000 object.8610
60001e68 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 Tone.cpp
0000271c l     F .text.itcm	00000018 _GLOBAL__sub_I__Z4tonehtm
20000fd4 l     O .data	00000008 tone_timer
00000000 l    df *ABS*	00000000 usb_desc.c
60001f4c l     O .text.progmem	0000000a qualifier_descriptor
20001594 l     O .data	00000021 seremu_report_desc
20001578 l     O .data	0000001c rawhid_report_desc
20001564 l     O .data	00000012 device_descriptor
00000000 l    df *ABS*	00000000 serialEvent.cpp
00000000 l    df *ABS*	00000000 vector_tests.cpp
0000007c l     F .text.itcm	0000005c int assert_eq<float>(float, float, String) [clone .part.1] [clone .constprop.4]
00000000 l    df *ABS*	00000000 blink.cpp
00000000 l    df *ABS*	00000000 vector.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000fa4 l     F .text.itcm	0000004c digitalWrite.part.0
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 usb_rawhid.c
00001fe0 l     F .text.itcm	00000034 rx_event
00002014 l     F .text.itcm	00000060 rx_queue_transfer
20001f5e l     O .bss	00000001 tx_head
20001ae0 l     O .bss	00000080 rx_transfer
20001f5a l     O .bss	00000001 rx_tail
20001f18 l     O .bss	00000005 rx_list
20200060 l     O .bss.dma	00000100 rx_buffer
20200160 l     O .bss.dma	00000100 txbuffer
20001f58 l     O .bss	00000001 rx_head
20001c60 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 usb_seremu.c
000020e8 l     F .text.itcm	00000064 rx_queue_transfer
0000214c l     F .text.itcm	00000058 rx_event
000023c0 l     F .text.itcm	0000002c usb_seremu_flush_callback
000023ec l     F .text.itcm	00000140 usb_seremu_write.part.1
20001f5b l     O .bss	00000001 rx_tail
20001f60 l     O .bss	00000001 tx_noautoflush
20001f5f l     O .bss	00000001 tx_head
20001b60 l     O .bss	00000100 rx_transfer
20001f08 l     O .bss	00000010 rx_index
20001f20 l     O .bss	00000009 rx_list
20200260 l     O .bss.dma	00000100 rx_buffer
20200360 l     O .bss.dma	00000300 txbuffer
20001f50 l     O .bss	00000002 tx_available
20001f04 l     O .bss	00000004 rx_available
20001f59 l     O .bss	00000001 rx_head
20001f5d l     O .bss	00000001 transmit_previous_timeout
20001ce0 l     O .bss	00000180 tx_transfer
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 IntervalTimer.cpp
20001ac0 l     O .bss	00000010 funct_table
00000000 l    df *ABS*	00000000 Print.cpp
00000000 l    df *ABS*	00000000 WString.cpp
000027fc l     F .text.itcm	0000001a String::operator=(char const*) [clone .part.2]
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 yield.cpp
20001f54 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 atexit_arm.cc
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 cxa_atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 itoa.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 lib_a-memcpy.o
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 realloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 utoa.c
00000000 l    df *ABS*	00000000 vdprintf.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lib_a-memchr.o
00000000 l    df *ABS*	00000000 mprec.c
20000820 l     O .data	0000000c p05.6087
00000000 l    df *ABS*	00000000 vasnprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 dtoa.c
00004944 l     F .text.itcm	00000128 quorem
00000000 l    df *ABS*	00000000 vfprintf.c
20000b80 l     O .data	00000010 zeroes.7258
200004a0 l     O .data	00000010 blanks.7257
00000000 l    df *ABS*	00000000 vfprintf.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 impure.c
20000b90 l     O .data	00000428 impure_data
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 
00000000 l       *UND*	00000000 __fini_array_end
00000000 l       *UND*	00000000 __bss_start__
6000b400 l       .text.csf	00000000 __text_csf_end
00000000 l       *UND*	00000000 __bss_end__
00000000 l       *UND*	00000000 software_init_hook
00000000 l       *UND*	00000000 __fini_array_start
00000000 l       *UND*	00000000 hardware_init_hook
00000000 l       *UND*	00000000 __libc_fini
00000000 l       *UND*	00000000 __stack
60001e28 l     F .text.code	00000008 __main_veneer
60001e30 l     F .text.code	00000008 __sm_set_pool_veneer
60001e38 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60001e40 l     F .text.code	00000008 ____libc_init_array_veneer
60001e48 l     F .text.code	00000008 __set_arm_clock_veneer
60001e50 l     F .text.code	00000008 __delay_veneer
60001e58 l     F .text.code	00000008 __pwm_init_veneer
60001e60 l     F .text.code	00000008 __memset_veneer
00006d68 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
00006d70 l     F .text.itcm	00000008 ___init_veneer
00003a80 g     F .text.itcm	000000ba strcpy
00002818 g     F .text.itcm	00000026 String::String(int, unsigned char)
00002710  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
00002304 g     F .text.itcm	00000024 usb_seremu_available
00002910 g     F .text.itcm	00000004 operator new[](unsigned int)
20001f55 g     O .bss	00000001 blinker_status
600016b4 g     F .text.code	00000002 startup_default_late_hook
000002e0 g     F .text.itcm	00000050 reset_and_fill_test(int)
00002940  w    F .text.itcm	000000f0 yield
20001f4c g     O .bss	00000004 usb_timer1_callback
60001e98 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
6000179c g     F .text.code	000003bc configure_external_ram
00000bac  w    F .text.itcm	0000002a Vector<float>::slice(float*, int, int)
0000291c  w    F .text.itcm	00000004 usb_seremu_class::peek()
000026c0 g     F .text.itcm	00000020 Print::println()
00003668 g     F .text.itcm	00000002 __malloc_unlock
60001654 g     F .text.code	00000058 analog_init
00003d04 g     F .text.itcm	0000004a _vdprintf_r
20000fc0 g     O .data	00000004 F_CPU_ACTUAL
00003500 g     F .text.itcm	000000c6 memmove
00004260 g     F .text.itcm	0000004c _Balloc
00006d8c g       .ARM.exidx	00000000 __exidx_end
20001f52 g     O .bss	00000001 EventResponder::runningFromYield
00000b08  w    F .text.itcm	0000002c Vector<float>::reset(int)
0000165c g     F .text.itcm	00000060 tempmonGetTemp
00002d60 g     F .text.itcm	0000000c __errno
60001000 g     O .text.headers	00000020 ImageVectorTable
00002920  w    F .text.itcm	00000004 usb_seremu_class::read()
20001e8c g     O .bss	00000004 EventResponder::firstInterrupt
00001f84 g     F .text.itcm	00000004 usb_transfer_status
00001404 g     F .text.itcm	00000090 sm_set_pool
00000ae4  w    F .text.itcm	00000022 Vector<float>::Vector(int)
000027dc g     F .text.itcm	0000001e String::String(String const&)
00002574 g     F .text.itcm	0000003c usb_seremu_flush_output
0000252c g     F .text.itcm	0000002c usb_seremu_putchar
200004b0 g     O .data	00000370 digital_pin_to_info_PGM
20001fd4 g     O .bss	00000004 errno
00006d88 g       .text.itcm	00000000 _etext
20001ac0 g       .bss	00000000 _sbss
00000bd8  w    F .text.itcm	0000001a Vector<float>::operator[](int)
00002570 g     F .text.itcm	00000004 usb_seremu_write_buffer_free
60001f58 g       *ABS*	00000000 _stextload
00001e3c g     F .text.itcm	00000064 usb_config_rx
00002930  w    F .text.itcm	00000008 usb_seremu_class::write(unsigned char const*, unsigned int)
00000b50  w    F .text.itcm	00000004 Vector<float>::size()
20001e88 g     O .bss	00000004 EventResponder::lastInterrupt
000033cc g     F .text.itcm	00000134 memcpy
000056f8 g     F .text.itcm	00001570 _svfprintf_r
20001f44 g     O .bss	00000004 systick_millis_count
00000b54  w    F .text.itcm	00000004 Vector<float>::as_array()
00002a3c g     F .text.itcm	00000000 .hidden __aeabi_uldivmod
20001f61 g     O .bss	00000001 usb_configuration
000013b4 g     F .text.itcm	00000050 sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
60001e98  w    O .text.progmem	00000018 usb_string_manufacturer_name
00002e10 g     F .text.itcm	00000010 malloc
200002a8 g     O .data	000000c8 __mprec_tens
60001cd8 g     F .text.code	000000ec usb_init
00002818 g     F .text.itcm	00000026 String::String(int, unsigned char)
20001ee4 g     O .bss	00000004 __malloc_top_pad
20001fc0 g     O .bss	00000004 systick_safe_read
aaaaaaab g       *ABS*	00000000 _flexram_bank_config
20000fb8 g     O .data	00000000 .hidden __dso_handle
00002e0c g     F .text.itcm	00000004 itoa
00004198 g     F .text.itcm	0000001c _localeconv_r
000043dc g     F .text.itcm	00000012 __i2b
20000000 g       .data	00000000 _sdata
00002938  w    F .text.itcm	00000006 usb_seremu_class::write(unsigned char)
60001f00 g     O .text.progmem	00000049 usb_config_descriptor_480
00002a6c g     F .text.itcm	000002e2 .hidden __udivmoddi4
00002744 g     F .text.itcm	0000002a String::reserve(unsigned int)
00003a5c g     F .text.itcm	00000024 _sbrk_r
600016ac g     F .text.code	00000002 startup_default_early_hook
60001428 g     F .text.code	0000022c ResetHandler
00000ff0 g     F .text.itcm	0000000a digitalWrite
20001e90 g     O .bss	00000004 EventResponder::lastYield
20001fc4 g     O .bss	00000010 extmem_smalloc_pool
20001edc g     O .bss	00000004 __malloc_max_sbrked_mem
00000ffc g     F .text.itcm	00000080 pinMode
000028dc g     F .text.itcm	00000034 String::getBytes(unsigned char*, unsigned int, unsigned int) const
000001d0 g     F .text.itcm	00000110 index_operator_test(int)
6000a800 g     O .text.csf	00000c00 hab_csf
20280000 g       .text.csf	00000000 _heap_end
00006d84 g       .ARM.exidx	00000000 __exidx_start
70000000 g       .bss.extram	00000000 _extram_end
20001e84 g     O .bss	00000004 EventResponder::firstYield
2000049c g     O .data	00000004 _global_impure_ptr
0000367c g     F .text.itcm	000003de _realloc_r
00002d8c g     F .text.itcm	00000050 __libc_init_array
00000bf4  w    F .text.itcm	00000020 Vector<float>::operator=(Vector<float>&)
00002928  w    F .text.itcm	00000004 usb_seremu_class::flush()
20000280 g     O .data	00000028 __mprec_bigtens
00001624 g     F .text.itcm	00000030 _sbrk
60008ce4 g       *ABS*	00000000 _sdataload
00004670 g     F .text.itcm	00000042 __mcmp
20000fe0 g     O .data	00000004 __brkval
60001e18 g     F .text.code	00000000 _init
00000664 g     F .text.itcm	000000c0 assign_operator_test(Vector<float>, Vector<float>)
000000d8 g     F .text.itcm	0000002e incremental_vector_fill(int)
00002734 g     F .text.itcm	0000000e String::~String()
000027dc g     F .text.itcm	0000001e String::String(String const&)
00002558 g     F .text.itcm	00000018 usb_seremu_write
000028b0 g     F .text.itcm	00000010 operator+(StringSumHelper const&, String const&)
60001eb4 g     O .text.progmem	00000049 usb_config_descriptor_12
20001ee8 g     O .bss	00000004 blinker_timer_mark
20002000 g       .bss	00000000 _ebss
00002840 g     F .text.itcm	00000070 String::append(char const*, unsigned int)
00004340 g     F .text.itcm	00000040 __hi0bits
20200660 g       .bss.dma	00000000 _heap_start
00000728 g     F .text.itcm	00000294 append_test(Vector<float>)
00002770 g     F .text.itcm	00000042 String::copy(char const*, unsigned int)
00000001 g       *ABS*	00000000 _itcm_block_count
20001f80 g     O .bss	00000020 endpoint0_transfer_data
00002914 g     F .text.itcm	00000004 operator delete(void*, unsigned int)
00002328 g     F .text.itcm	00000030 tx_zero_pad
000010cc g     F .text.itcm	000002b8 pwm_init
00002734 g     F .text.itcm	0000000e String::~String()
60001b58 g     F .text.code	00000064 usb_pll_start
00004520 g     F .text.itcm	000000a0 __pow5mult
00000000  w      *UND*	00000000 __deregister_frame_info
20001fa0 g     O .bss	00000020 endpoint0_transfer_ack
00001f38 g     F .text.itcm	00000028 usb_transmit
000025f8 g     F .text.itcm	00000020 systick_isr
00002ddc g     F .text.itcm	0000002e __itoa
20000fc4 g     O .data	00000010 Serial
600016ac  w    F .text.code	00000002 startup_early_hook
0000292c  w    F .text.itcm	00000004 usb_seremu_class::availableForWrite()
00000518 g     F .text.itcm	0000007c iterative_test(int, int)
00000ac8  w    F .text.itcm	00000010 Vector<float>::~Vector()
000041c0 g     F .text.itcm	00000000 memchr
00000c14 g     F .text.itcm	000002c4 set_arm_clock
20001f40 g     O .bss	00000004 systick_cycle_count
200015b8 g     O .data	00000016 usb_string_serial_number_default
00003fc8 g     F .text.itcm	000001d0 _free_r
00003e54 g     F .text.itcm	000000d8 __call_exitprocs
20001558 g     O .data	00000004 __malloc_sbrk_base
00000448  w    F .text.itcm	000000d0 int assert_eq<float>(float*, float*, String, int)
000045c0 g     F .text.itcm	000000ae __lshift
00001f08 g     F .text.itcm	0000002e usb_prepare_transfer
00002074 g     F .text.itcm	00000074 usb_rawhid_configure
00001494 g     F .text.itcm	00000190 unused_interrupt_vector
00006c68 g     F .text.itcm	00000100 __ssprint_r
20001f48 g     O .bss	00000004 usb_timer0_callback
60001bbc g     F .text.code	0000011c tempmon_init
00004884 g     F .text.itcm	0000005e _vasnprintf_r
00002918  w    F .text.itcm	00000002 serialEvent()
00003db0 g     F .text.itcm	000000a4 __register_exitproc
000021a4 g     F .text.itcm	000000b4 usb_seremu_configure
000028c0 g     F .text.itcm	0000001c operator+(StringSumHelper const&, char const*)
000043f0 g     F .text.itcm	00000130 __multiply
00000025 g       *ABS*	00000000 _teensy_model_identifier
00003c1c g     F .text.itcm	00000066 strncpy
20001eb4 g     O .bss	00000028 __malloc_current_mallinfo
00002258 g     F .text.itcm	00000068 usb_seremu_getchar
000047c8 g     F .text.itcm	000000ba __d2b
20001e94 g     O .bss	00000020 HardwareSerial::s_serials_with_serial_events
60001dc4 g     F .text.code	00000054 _reboot_Teensyduino_
600016b0 g     F .text.code	00000002 startup_default_middle_hook
00000330 g     F .text.itcm	00000114 recursive_test(Vector<float>*, int, int)
0000366c g     F .text.itcm	00000010 realloc
00001824 g     F .text.itcm	00000618 usb_isr
00002d54 g     F .text.itcm	0000000c __cxa_atexit
00000ac8  w    F .text.itcm	00000010 Vector<float>::~Vector()
00000b34  w    F .text.itcm	0000001c Vector<float>::from_array(float*, int)
000027b4 g     F .text.itcm	00000026 String::String(char const*)
20001f3c g     O .bss	00000004 scale_cpu_cycles_to_microseconds
00002d50  w    F .text.itcm	00000002 .hidden __aeabi_ldiv0
000022c0 g     F .text.itcm	00000044 usb_seremu_peekchar
20001150 g     O .data	00000408 __malloc_av_
00003664 g     F .text.itcm	00000002 __malloc_lock
20001800 g     O .data	000002c0 _VectorsRam
000048e4 g     F .text.itcm	0000005e _calloc_r
00003c84 g     F .text.itcm	00000080 __utoa
200015ce g     O .data	00000001 yield_active_check_flags
20001f62 g     O .bss	00000001 usb_high_speed
000035c8 g     F .text.itcm	0000009a memset
20000374  w    O .data	00000024 vtable for usb_seremu_class
000009bc g     F .text.itcm	000000dc main
20001ee0 g     O .bss	00000004 __malloc_max_total_mem
20200000 g     O .bss.dma	00000049 usb_descriptor_buffer
00000108  w    F .text.itcm	000000c8 int assert_eq<float>(float*, float, String, int)
00001f88 g     F .text.itcm	00000058 usb_init_serialnumber
60001e70 g       .text.code	00000000 __init_array_end
00004a70 g     F .text.itcm	00000c84 _dtoa_r
00002e30 g     F .text.itcm	00000570 _malloc_r
20001f53 g     O .bss	00000001 HardwareSerial::s_count_serials_with_serial_events
00003d68 g     F .text.itcm	0000001a __ascii_wctomb
00000a98 g     F .text.itcm	00000030 setup_blink()
00003f2c g     F .text.itcm	0000009c _malloc_trim_r
60001eb0 g     O .text.progmem	00000004 string0
600016b4  w    F .text.code	00000002 startup_late_hook
60001f56 g     O .text.progmem	00000001 _serialEvent_default
20000000 g     O .data	00000280 endpoint_queue_head
60001e70  w    O .text.progmem	00000026 usb_string_product_name
00000ed8 g     F .text.itcm	000000cc delay
00006d80 g     F .fini	00000000 _fini
60001020 g     O .text.headers	0000000c BootData
000026f0 g     F .text.itcm	0000001e Print::printf(char const*, ...)
00001658 g     F .text.itcm	00000004 Panic_Temp_isr
00000b58  w    F .text.itcm	00000054 Vector<float>::append(Vector<float>*)
00003d84 g     F .text.itcm	0000002c _write_r
00002924  w    F .text.itcm	00000004 usb_seremu_class::available()
000027b4 g     F .text.itcm	00000026 String::String(char const*)
20001560 g     O .data	00000004 _impure_ptr
00002618 g     F .text.itcm	0000005c IntervalTimer::end()
60001e68 g       .text.code	00000000 __preinit_array_end
000033a0 g     F .text.itcm	0000002a __ascii_mbtowc
20000ae4 g     O .data	0000009c usb_descriptor_list
00000ad8  w    F .text.itcm	0000000c Vector<float>::clear()
20078000 g       .text.csf	00000000 _estack
000026e0  w    F .text.itcm	0000000e _write
20001ac0 g       .data	00000000 _edata
20001f57 g     O .bss	00000001 external_psram_size
0000107c g     F .text.itcm	0000004e ultoa
000025b0 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
2000155c g     O .data	00000004 __malloc_trim_threshold
00002d6c g     F .text.itcm	00000020 exit
000046b4 g     F .text.itcm	00000114 __mdiff
20000398 g     O .data	00000101 _ctype_
60001e68 g       .text.code	00000000 __init_array_start
00002d50  w    F .text.itcm	00000002 .hidden __aeabi_idiv0
20000fbc g     O .data	00000004 F_BUS_ACTUAL
00001654  w    F .text.itcm	00000004 _exit
00000594  w    F .text.itcm	000000d0 int assert_neq<float>(float*, float, String, int)
00000000 g       .text.itcm	00000000 _stext
20000fdc g     O .data	00000004 IntervalTimer::nvic_priorites
00003b40 g     F .text.itcm	000000dc strlen
20001f64 g     O .bss	00000001 usb_seremu_online
00002710  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
60001e70 g     O .text.progmem	00000026 usb_string_product_name_default
00003d50 g     F .text.itcm	00000018 vdprintf
600016b0  w    F .text.code	00000002 startup_middle_hook
00002674 g     F .text.itcm	0000004a Print::print(String const&)
600016b8 g     F .text.code	000000e4 configure_cache
00000000  w      *UND*	00000000 _Jv_RegisterClasses
60001e68 g       .text.code	00000000 __preinit_array_start
00001f60 g     F .text.itcm	00000024 usb_receive
00004380 g     F .text.itcm	0000005a __lo0bits
00002358 g     F .text.itcm	00000068 tx_queue_transfer
0000b400 g       *ABS*	00000000 _flashimagelen
00002a30 g     F .text.itcm	0000000a __aeabi_atexit
00000000  w      *UND*	00000000 __register_frame_info
00001384 g     F .text.itcm	00000030 rtc_get
70000000 g       .bss.extram	00000000 _extram_start
000025f4 g     F .text.itcm	00000004 pendablesrvreq_isr
00000ae4  w    F .text.itcm	00000022 Vector<float>::Vector(int)
20000fe4 g     O .data	0000016c __global_locale
00001ea0 g     F .text.itcm	00000068 usb_config_tx
00002e20 g     F .text.itcm	00000010 free
000042c0 g     F .text.itcm	00000080 __multadd
000042ac g     F .text.itcm	00000012 _Bfree
200015b8  w    O .data	00000016 usb_string_serial_number


